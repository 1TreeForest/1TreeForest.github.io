<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>正则表达式速查</title>
      <link href="/2021/09/26/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%80%9F%E6%9F%A5/"/>
      <url>/2021/09/26/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%80%9F%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式语法速查表"><a href="#正则表达式语法速查表" class="headerlink" title="正则表达式语法速查表"></a>正则表达式语法速查表</h1><table><thead><tr><th align="center">字符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">\</td><td align="center">将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code>n</code>“匹配字符”<code>n</code>“。”<code>\n</code>“匹配一个换行符。串行”<code>\\</code>“匹配”<code>\</code>“而”<code>\(</code>“则匹配”<code>(</code>“。</td></tr><tr><td align="center">^</td><td align="center">匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“<code>\n</code>“或”<code>\r</code>“之后的位置。</td></tr><tr><td align="center">$</td><td align="center">匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“<code>\n</code>“或”<code>\r</code>“之前的位置。</td></tr><tr><td align="center">*</td><td align="center">匹配前面的子表达式零次或多次。例如，zo<em>能匹配“<code>z</code>“以及”<code>zoo</code>“。</em>等价于{0,}。</td></tr><tr><td align="center">+</td><td align="center">匹配前面的子表达式一次或多次。例如，“<code>zo+</code>“能匹配”<code>zo</code>“以及”<code>zoo</code>“，但不能匹配”<code>z</code>“。+等价于{1,}。</td></tr><tr><td align="center">?</td><td align="center">匹配前面的子表达式零次或一次。例如，“<code>do(es)?</code>“可以匹配”<code>does</code>“或”<code>does</code>“中的”<code>do</code>“。?等价于{0,1}。</td></tr><tr><td align="center">{<em>n</em>}</td><td align="center"><em>n</em>是一个非负整数。匹配确定的<em>n</em>次。例如，“<code>o&#123;2&#125;</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但是能匹配”<code>food</code>“中的两个o。</td></tr><tr><td align="center">{<em>n</em>,}</td><td align="center"><em>n</em>是一个非负整数。至少匹配<em>n</em>次。例如，“<code>o&#123;2,&#125;</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但能匹配”<code>foooood</code>“中的所有o。”<code>o&#123;1,&#125;</code>“等价于”<code>o+</code>“。”<code>o&#123;0,&#125;</code>“则等价于”<code>o*</code>“。</td></tr><tr><td align="center">{<em>n</em>,<em>m</em>}</td><td align="center"><em>m</em>和<em>n</em>均为非负整数，其中<em>n</em>&lt;=<em>m</em>。最少匹配<em>n</em>次且最多匹配<em>m</em>次。例如，“<code>o&#123;1,3&#125;</code>“将匹配”<code>fooooood</code>“中的前三个o。”<code>o&#123;0,1&#125;</code>“等价于”<code>o?</code>“。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td align="center">?</td><td align="center">当该字符紧跟在任何一个其他限制符（*,+,?，{<em>n</em>}，{<em>n</em>,}，{<em>n</em>,<em>m</em>}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“<code>oooo</code>“，”<code>o+?</code>“将匹配单个”<code>o</code>“，而”<code>o+</code>“将匹配所有”<code>o</code>“。</td></tr><tr><td align="center">.</td><td align="center">匹配除“<code>\</code><em><code>n</code></em>“之外的任何单个字符。要匹配包括”<code>\</code><em><code>n</code></em>“在内的任何字符，请使用像”`(.</td></tr><tr><td align="center">(pattern)</td><td align="center">匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“<code>\(</code>“或”<code>\)</code>“。</td></tr><tr><td align="center">(?:pattern)</td><td align="center">匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“`(</td></tr><tr><td align="center">(?=pattern)</td><td align="center">正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“`Windows(?=95</td></tr><tr><td align="center">(?!pattern)</td><td align="center">正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“`Windows(?!95</td></tr><tr><td align="center">(?&lt;=pattern)</td><td align="center">反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“`(?&lt;=95</td></tr><tr><td align="center">(?&lt;!pattern)</td><td align="center">反向否定预查，与正向否定预查类拟，只是方向相反。例如“`(?&lt;!95</td></tr><tr><td align="center">x|y</td><td align="center">匹配x或y。例如，“`z</td></tr><tr><td align="center">[xyz]</td><td align="center">字符集合。匹配所包含的任意一个字符。例如，“<code>[abc]</code>“可以匹配”<code>plain</code>“中的”<code>a</code>“。</td></tr><tr><td align="center">[^xyz]</td><td align="center">负值字符集合。匹配未包含的任意字符。例如，“<code>[^abc]</code>“可以匹配”<code>plain</code>“中的”<code>p</code>“。</td></tr><tr><td align="center">[a-z]</td><td align="center">字符范围。匹配指定范围内的任意字符。例如，“<code>[a-z]</code>“可以匹配”<code>a</code>“到”<code>z</code>“范围内的任意小写字母字符。</td></tr><tr><td align="center">[^a-z]</td><td align="center">负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<code>[^a-z]</code>“可以匹配任何不在”<code>a</code>“到”<code>z</code>“范围内的任意字符。</td></tr><tr><td align="center">\b</td><td align="center">匹配一个单词边界，也就是指单词和空格间的位置。例如，“<code>er\b</code>“可以匹配”<code>never</code>“中的”<code>er</code>“，但不能匹配”<code>verb</code>“中的”<code>er</code>“。</td></tr><tr><td align="center">\B</td><td align="center">匹配非单词边界。“<code>er\B</code>“能匹配”<code>verb</code>“中的”<code>er</code>“，但不能匹配”<code>never</code>“中的”<code>er</code>“。</td></tr><tr><td align="center">\cx</td><td align="center">匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“<code>c</code>“字符。</td></tr><tr><td align="center">\d</td><td align="center">匹配一个数字字符。等价于[0-9]。</td></tr><tr><td align="center">\D</td><td align="center">匹配一个非数字字符。等价于[^0-9]。</td></tr><tr><td align="center">\f</td><td align="center">匹配一个换页符。等价于\x0c和\cL。</td></tr><tr><td align="center">\n</td><td align="center">匹配一个换行符。等价于\x0a和\cJ。</td></tr><tr><td align="center">\r</td><td align="center">匹配一个回车符。等价于\x0d和\cM。</td></tr><tr><td align="center">\s</td><td align="center">匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。</td></tr><tr><td align="center">\S</td><td align="center">匹配任何非空白字符。等价于[^ \f\n\r\t\v]。</td></tr><tr><td align="center">\t</td><td align="center">匹配一个制表符。等价于\x09和\cI。</td></tr><tr><td align="center">\v</td><td align="center">匹配一个垂直制表符。等价于\x0b和\cK。</td></tr><tr><td align="center">\w</td><td align="center">匹配包括下划线的任何单词字符。等价于“<code>[A-Za-z0-9_]</code>“。</td></tr><tr><td align="center">\W</td><td align="center">匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>“。</td></tr><tr><td align="center">\x<em>n</em></td><td align="center">匹配<em>n</em>，其中<em>n</em>为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“<code>\x41</code>“匹配”<code>A</code>“。”<code>\x041</code>“则等价于”<code>\x04&amp;1</code>“。正则表达式中可以使用ASCII编码。.</td></tr><tr><td align="center">*num*</td><td align="center">匹配<em>num</em>，其中<em>num</em>是一个正整数。对所获取的匹配的引用。例如，“<code>(.)\1</code>“匹配两个连续的相同字符。</td></tr><tr><td align="center">*n*</td><td align="center">标识一个八进制转义值或一个向后引用。如果*n<em>之前至少</em>n<em>个获取的子表达式，则</em>n<em>为向后引用。否则，如果</em>n<em>为八进制数字（0-7），则</em>n*为一个八进制转义值。</td></tr><tr><td align="center">*nm*</td><td align="center">标识一个八进制转义值或一个向后引用。如果*nm<em>之前至少有</em>nm<em>个获得子表达式，则</em>nm<em>为向后引用。如果*nm</em>之前至少有<em>n</em>个获取，则<em>n</em>为一个后跟文字<em>m</em>的向后引用。如果前面的条件都不满足，若<em>n</em>和<em>m</em>均为八进制数字（0-7），则*nm<em>将匹配八进制转义值</em>nm*。</td></tr><tr><td align="center">*nml*</td><td align="center">如果<em>n</em>为八进制数字（0-3），且<em>m和l</em>均为八进制数字（0-7），则匹配八进制转义值<em>nm</em>l。</td></tr><tr><td align="center">\u<em>n</em></td><td align="center">匹配<em>n</em>，其中<em>n</em>是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（©）。</td></tr></tbody></table><h1 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h1><table><thead><tr><th align="center">用户名</th><th>/^[a-z0-9_-]{3,16}$/</th></tr></thead><tbody><tr><td align="center">密码</td><td>/^[a-z0-9_-]{6,18}$/</td></tr><tr><td align="center">密码2</td><td>(?=^.{8,}$)(?=.<em>\d)(?=.<em>\W+)(?=.</em>[A-Z])(?=.</em>[a-z])(?!.<em>\n).</em>$ (由数字/大写字母/小写字母/标点符号组成，四种都必有，8位以上)</td></tr><tr><td align="center">十六进制值</td><td>/^#?([a-f0-9]{6}|[a-f0-9]{3})$/</td></tr><tr><td align="center">电子邮箱</td><td>/^([a-z0-9_.-]+)@([\da-z.-]+).([a-z.]{2,6})$/ /^[a-z\d]+(.[a-z\d]+)<em>@(<a href="-%5B%5Cda-z%5D">\da-z</a>?)+(.{1,2}[a-z]+)+$/或\w+([-+.]\w+)</em>@\w+([-.]\w+)<em>.\w+([-.]\w+)</em></td></tr><tr><td align="center">URL</td><td>/^(https?://)?([\da-z.-]+).([a-z.]{2,6})([/\w .-]*)<em>/?$/ 或 [a-zA-z]+://[^\s]</em></td></tr><tr><td align="center">IP 地址</td><td>/((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/ /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ 或 ((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)</td></tr><tr><td align="center">HTML 标签</td><td>/^&lt;([a-z]+)([^&lt;]+)<em>(?:&gt;(.</em>)&lt;/\1&gt;|\s+/&gt;)$/或&lt;(.<em>)(.*)&gt;.</em>&lt;/\1&gt;|&lt;(.*) /&gt;</td></tr><tr><td align="center">删除代码\注释</td><td>(?&lt;!http:|\S)//.*$</td></tr><tr><td align="center">匹配双字节字符(包括汉字在内)</td><td>[^\x00-\xff]</td></tr><tr><td align="center">汉字(字符)</td><td>[\u4e00-\u9fa5]</td></tr><tr><td align="center">Unicode编码中的汉字范围</td><td>/^[\u2E80-\u9FFF]+$/</td></tr><tr><td align="center">中文及全角标点符号(字符)</td><td>[\u3000-\u301e\ufe10-\ufe19\ufe30-\ufe44\ufe50-\ufe6b\uff01-\uffee]</td></tr><tr><td align="center">日期(年-月-日)</td><td>(\d{4}|\d{2})-((0?([1-9]))|(1[1|2]))-((0?[1-9])|(<a href="%5B1-9%5D">12</a>)|(3[0|1]))</td></tr><tr><td align="center">日期(月/日/年)</td><td>((0?[1-9]{1})|(1[1|2]))/(0?[1-9]|([12][1-9])|(3[0|1]))/(\d{4}|\d{2})</td></tr><tr><td align="center">时间(小时:分钟, 24小时制)</td><td>((1|0?)[0-9]|2[0-3]):([0-5][0-9])</td></tr><tr><td align="center">中国大陆固定电话号码</td><td>(\d{4}-|\d{3}-)?(\d{8}|\d{7})</td></tr><tr><td align="center">中国大陆手机号码</td><td>1\d{10}</td></tr><tr><td align="center">中国大陆邮政编码</td><td>[1-9]\d{5}</td></tr><tr><td align="center">中国大陆身份证号(15位或18位)</td><td>\d{15}(\d\d[0-9xX])?</td></tr><tr><td align="center">非负整数(正整数或零)</td><td>\d+</td></tr><tr><td align="center">正整数</td><td>[0-9]<em>[1-9][0-9]</em></td></tr><tr><td align="center">负整数</td><td>-[0-9]<em>[1-9][0-9]</em></td></tr><tr><td align="center">整数</td><td>-?\d+</td></tr><tr><td align="center">小数</td><td>(-?\d+)(.\d+)?</td></tr><tr><td align="center">空白行</td><td>\n\s*\r 或者 \n\n(editplus) 或者 ^[\s\S ]*\n</td></tr><tr><td align="center">QQ号码</td><td>[1-9]\d{4,}</td></tr><tr><td align="center">不包含abc的单词</td><td>\b((?!abc)\w)+\b</td></tr><tr><td align="center">匹配首尾空白字符</td><td>^\s*|\s*$</td></tr><tr><td align="center">编辑常用</td><td>以下是针对特殊中文的一些替换(editplus) ^[0-9].*\n  ^[^第].<em>\n  ^[习题].<em>\n ^[\s\S ]<em>\n ^[0-9]<em>. ^[\s\S ]<em>\n &lt;p[^&lt;&gt;</em>]&gt;href=”javascript:if(confirm(‘(.</em>?)’))window.location=’(.</em>?)’”&lt;span style=”.[^”]*rgb(255,255,255)“&gt;.[^&lt;&gt;]</em></span>  <DIV class=xs0>[\s\S]</em>?</DIV></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 速查 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu设置为服务及开机启动</title>
      <link href="/2021/09/01/ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%8F%8A%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
      <url>/2021/09/01/ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%8F%8A%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="脚本的编写"><a href="#脚本的编写" class="headerlink" title="脚本的编写"></a>脚本的编写</h1><p>Linux的服务的本质是一个shell脚本，但是需要遵循service的标准模版，比如在头注释中编写service描述等，以供系统读取；还要定义每种操作的具体实行方式，比如在service start时会执行脚本中的start()函数。</p><h2 id="标准模板"><a href="#标准模板" class="headerlink" title="标准模板"></a>标准模板</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Fill in name of program here.</span></span><br><span class="line">PROG=<span class="string">&quot;myService&quot;</span></span><br><span class="line">PROG_PATH=<span class="string">&quot;/usr/local/myServer&quot;</span> <span class="comment">## Unnecessary, but sometimes helpful (for example，  $PROG resides in /opt).</span></span><br><span class="line">PROG_ARGS=<span class="string">&quot;&quot;</span> </span><br><span class="line">PID_PATH=<span class="string">&quot;/var/run/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -e <span class="string">&quot;<span class="variable">$PID_PATH</span>/<span class="variable">$PROG</span>.pid&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment">## Program is running, exit with error.</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Error! <span class="variable">$PROG</span> is currently running!&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">## Change from /dev/null to something like /var/log/$PROG if you want to save output.</span></span><br><span class="line">        <span class="variable">$PROG_PATH</span>/<span class="variable">$PROG</span> <span class="variable">$PROG_ARGS</span> 2&gt;&amp;1 &gt;/var/<span class="built_in">log</span>/<span class="variable">$PROG</span> &amp;</span><br><span class="line">        <span class="variable">$pid</span>=`ps ax | grep -i <span class="variable">$PROG</span> | sed <span class="string">&#x27;s/^\([0-9]\&#123;1,\&#125;\).*/\1/g&#x27;</span> | head -n 1`</span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PROG</span> started&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$pid</span> &gt; <span class="string">&quot;<span class="variable">$PID_PATH</span>/<span class="variable">$PROG</span>.pid&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;begin stop&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ -e <span class="string">&quot;<span class="variable">$PID_PATH</span>/<span class="variable">$PROG</span>.pid&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment">## Program is running, so stop it</span></span><br><span class="line">        pid=`ps ax | grep -i <span class="variable">$PROG</span> | sed <span class="string">&#x27;s/^\([0-9]\&#123;1,\&#125;\).*/\1/g&#x27;</span> | head -n 1`</span><br><span class="line">        <span class="built_in">kill</span> <span class="variable">$pid</span></span><br><span class="line"></span><br><span class="line">        rm -f  <span class="string">&quot;<span class="variable">$PID_PATH</span>/<span class="variable">$PROG</span>.pid&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PROG</span> stopped&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">## Program is not running, exit with error.</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Error! <span class="variable">$PROG</span> not started!&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Check to see if we are running as root first.</span></span><br><span class="line"><span class="comment">## Found at http://www.cyberciti.biz/tips/shell-root-user-check-script.html</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="subst">$(id -u)</span>&quot;</span> != <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;This script must be run as root&quot;</span> 1&gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        start</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    ;;</span><br><span class="line">    stop)</span><br><span class="line">        stop</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    ;;</span><br><span class="line">    reload|restart|force-reload)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    ;;</span><br><span class="line">    **)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="variable">$0</span> &#123;start|stop|reload&#125;&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>一般来讲，我们只用改写其中的几个变量，start 方法和 stop 方法。其中，PROG变量为所要运行的可执行程序的名称， PROG_PATH为可执行文件所在的目录，PROG_ARGS为执行程序的各个参数。</p><h2 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h2><h3 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/init.d/jekyll-deploy</span><br></pre></td></tr></table></figure><h3 id="系统重新加载服务"><a href="#系统重新加载服务" class="headerlink" title="系统重新加载服务"></a>系统重新加载服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">systemctl is-enabled servicename.service <span class="comment">#查询服务是否开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> *.service <span class="comment">#开机运行服务</span></span><br><span class="line">systemctl <span class="built_in">disable</span> *.service <span class="comment">#取消开机运行</span></span><br><span class="line">systemctl start *.service <span class="comment">#启动服务</span></span><br><span class="line">systemctl stop *.service <span class="comment">#停止服务</span></span><br><span class="line">systemctl restart *.service <span class="comment">#重启服务</span></span><br><span class="line">systemctl reload *.service <span class="comment">#重新加载服务配置文件</span></span><br><span class="line">systemctl status *.service <span class="comment">#查询服务运行状态</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
